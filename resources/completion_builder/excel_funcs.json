[
    {
        "func_name": "ABS",
        "is_nullary": false,
        "comp_str": "ABS(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ACCRINT",
        "is_nullary": false,
        "comp_str": "ACCRINT(${1:issue},${2: first_interest},${3: settlement},${4: rate},${5: par},${6: frequency}${7:,${8: [basis]},${9: [calc_method]}})",
        "req_param": [
            "issue",
            "first_interest",
            "settlement",
            "rate",
            "par",
            "frequency"
        ],
        "opt_param": [
            "basis",
            "calc_method"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ACCRINTM",
        "is_nullary": false,
        "comp_str": "ACCRINTM(${1:issue},${2: settlement},${3: rate},${4: par}${5:,${6: [basis]}})",
        "req_param": [
            "issue",
            "settlement",
            "rate",
            "par"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ACOS",
        "is_nullary": false,
        "comp_str": "ACOS(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ACOSH",
        "is_nullary": false,
        "comp_str": "ACOSH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ACOT",
        "is_nullary": false,
        "comp_str": "ACOT(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ACOTH",
        "is_nullary": false,
        "comp_str": "ACOTH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ADDRESS",
        "is_nullary": false,
        "comp_str": "ADDRESS(${1:row_num},${2: column_num}${3:,${4: [abs_num]},${5: [a1]},${6: [sheet_text]}})",
        "req_param": [
            "row_num",
            "column_num"
        ],
        "opt_param": [
            "abs_num",
            "a1",
            "sheet_text"
        ],
        "ellipsis": false
    },
    {
        "func_name": "AGGREGATE",
        "is_nullary": false,
        "comp_str": "AGGREGATE(${1:function_num},${2: options},${3: array}${4:,${5: [k]}})",
        "req_param": [
            "function_num",
            "options",
            "array"
        ],
        "opt_param": [
            "k"
        ],
        "ellipsis": false
    },
    {
        "func_name": "AMORDEGRC",
        "is_nullary": false,
        "comp_str": "AMORDEGRC(${1:cost},${2: date_purchased},${3: first_period},${4: salvage},${5: period},${6: rate}${7:,${8: [basis]}})",
        "req_param": [
            "cost",
            "date_purchased",
            "first_period",
            "salvage",
            "period",
            "rate"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "AMORLINC",
        "is_nullary": false,
        "comp_str": "AMORLINC(${1:cost},${2: date_purchased},${3: first_period},${4: salvage},${5: period},${6: rate}${7:,${8: [basis]}})",
        "req_param": [
            "cost",
            "date_purchased",
            "first_period",
            "salvage",
            "period",
            "rate"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "AND",
        "is_nullary": false,
        "comp_str": "AND(${1:logical1}${2:,${3: [logical2], ...}})",
        "req_param": [
            "logical1"
        ],
        "opt_param": [
            "logical2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "ARABIC",
        "is_nullary": false,
        "comp_str": "ARABIC(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "AREAS",
        "is_nullary": false,
        "comp_str": "AREAS(${1:reference})",
        "req_param": [
            "reference"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ARRAYTOTEXT",
        "is_nullary": false,
        "comp_str": "ARRAYTOTEXT(${1:array}${2:,${3: [format]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "format"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ASC",
        "is_nullary": false,
        "comp_str": "ASC(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ASIN",
        "is_nullary": false,
        "comp_str": "ASIN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ASINH",
        "is_nullary": false,
        "comp_str": "ASINH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ATAN",
        "is_nullary": false,
        "comp_str": "ATAN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ATAN2",
        "is_nullary": false,
        "comp_str": "ATAN2(${1:x_num},${2: y_num})",
        "req_param": [
            "x_num",
            "y_num"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ATANH",
        "is_nullary": false,
        "comp_str": "ATANH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "AVEDEV",
        "is_nullary": false,
        "comp_str": "AVEDEV(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "AVERAGE",
        "is_nullary": false,
        "comp_str": "AVERAGE(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "AVERAGEA",
        "is_nullary": false,
        "comp_str": "AVERAGEA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "AVERAGEIF",
        "is_nullary": false,
        "comp_str": "AVERAGEIF(${1:range},${2: criteria}${3:,${4: [average_range]}})",
        "req_param": [
            "range",
            "criteria"
        ],
        "opt_param": [
            "average_range"
        ],
        "ellipsis": false
    },
    {
        "func_name": "AVERAGEIFS",
        "is_nullary": false,
        "comp_str": "AVERAGEIFS(${1:average_range},${2: criteria_range1},${3: criteria1}${4:,${5: [criteria_range2]},${6: [criteria2], ...}})",
        "req_param": [
            "average_range",
            "criteria_range1",
            "criteria1"
        ],
        "opt_param": [
            "criteria_range2",
            "criteria2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "BAHTTEXT",
        "is_nullary": false,
        "comp_str": "BAHTTEXT(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BASE",
        "is_nullary": false,
        "comp_str": "BASE(${1:number},${2: radix}${3:,${4: [min_length]}})",
        "req_param": [
            "number",
            "radix"
        ],
        "opt_param": [
            "min_length"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BESSELI",
        "is_nullary": false,
        "comp_str": "BESSELI(${1:x},${2: n})",
        "req_param": [
            "x",
            "n"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BESSELJ",
        "is_nullary": false,
        "comp_str": "BESSELJ(${1:x},${2: n})",
        "req_param": [
            "x",
            "n"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BESSELK",
        "is_nullary": false,
        "comp_str": "BESSELK(${1:x},${2: n})",
        "req_param": [
            "x",
            "n"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BESSELY",
        "is_nullary": false,
        "comp_str": "BESSELY(${1:x},${2: n})",
        "req_param": [
            "x",
            "n"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BETA.DIST",
        "is_nullary": false,
        "comp_str": "BETA.DIST(${1:x},${2: alpha},${3: beta},${4: cumulative}${5:,${6: [A]},${7: [B]}})",
        "req_param": [
            "x",
            "alpha",
            "beta",
            "cumulative"
        ],
        "opt_param": [
            "A",
            "B"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BETA.INV",
        "is_nullary": false,
        "comp_str": "BETA.INV(${1:probability},${2: alpha},${3: beta}${4:,${5: [A]},${6: [B]}})",
        "req_param": [
            "probability",
            "alpha",
            "beta"
        ],
        "opt_param": [
            "A",
            "B"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BETADIST",
        "is_nullary": false,
        "comp_str": "BETADIST(${1:x},${2: alpha},${3: beta}${4:,${5: [A]},${6: [B]}})",
        "req_param": [
            "x",
            "alpha",
            "beta"
        ],
        "opt_param": [
            "A",
            "B"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BETAINV",
        "is_nullary": false,
        "comp_str": "BETAINV(${1:probability},${2: alpha},${3: beta}${4:,${5: [A]},${6: [B]}})",
        "req_param": [
            "probability",
            "alpha",
            "beta"
        ],
        "opt_param": [
            "A",
            "B"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BIN2DEC",
        "is_nullary": false,
        "comp_str": "BIN2DEC(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BIN2HEX",
        "is_nullary": false,
        "comp_str": "BIN2HEX(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BIN2OCT",
        "is_nullary": false,
        "comp_str": "BIN2OCT(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BINOM.DIST",
        "is_nullary": false,
        "comp_str": "BINOM.DIST(${1:number_s},${2: trials},${3: probability_s},${4: cumulative})",
        "req_param": [
            "number_s",
            "trials",
            "probability_s",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BINOM.DIST.RANGE",
        "is_nullary": false,
        "comp_str": "BINOM.DIST.RANGE(${1:trials},${2: probability_s},${3: number_s}${4:,${5: [number_s2]}})",
        "req_param": [
            "trials",
            "probability_s",
            "number_s"
        ],
        "opt_param": [
            "number_s2"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BINOM.INV",
        "is_nullary": false,
        "comp_str": "BINOM.INV(${1:trials},${2: probability_s},${3: alpha})",
        "req_param": [
            "trials",
            "probability_s",
            "alpha"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BINOMDIST",
        "is_nullary": false,
        "comp_str": "BINOMDIST(${1:number_s},${2: trials},${3: probability_s},${4: cumulative})",
        "req_param": [
            "number_s",
            "trials",
            "probability_s",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BITAND",
        "is_nullary": false,
        "comp_str": "BITAND(${1:number1},${2: number2})",
        "req_param": [
            "number1",
            "number2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BITLSHIFT",
        "is_nullary": false,
        "comp_str": "BITLSHIFT(${1:number},${2: shift_amount})",
        "req_param": [
            "number",
            "shift_amount"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BITOR",
        "is_nullary": false,
        "comp_str": "BITOR(${1:number1},${2: number2})",
        "req_param": [
            "number1",
            "number2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BITRSHIFT",
        "is_nullary": false,
        "comp_str": "BITRSHIFT(${1:number},${2: shift_amount})",
        "req_param": [
            "number",
            "shift_amount"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BITXOR",
        "is_nullary": false,
        "comp_str": "BITXOR(${1:number1},${2: number2})",
        "req_param": [
            "number1",
            "number2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "BYCOL",
        "is_nullary": false,
        "comp_str": "BYCOL(${1:array}${2:,${3: [function]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "function"
        ],
        "ellipsis": false
    },
    {
        "func_name": "BYROW",
        "is_nullary": false,
        "comp_str": "BYROW(${1:array}${2:,${3: [function]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "function"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CALL",
        "is_nullary": false,
        "comp_str": "CALL(${1:register_id}${2:,${3: [argument1], ...}})",
        "req_param": [
            "register_id"
        ],
        "opt_param": [
            "argument1"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CEILING",
        "is_nullary": false,
        "comp_str": "CEILING(${1:number},${2: significance})",
        "req_param": [
            "number",
            "significance"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CEILING.MATH",
        "is_nullary": false,
        "comp_str": "CEILING.MATH(${1:number}${2:,${3: [significance]},${4: [mode]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "significance",
            "mode"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CEILING.PRECISE",
        "is_nullary": false,
        "comp_str": "CEILING.PRECISE(${1:number}${2:,${3: [significance]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "significance"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CELL",
        "is_nullary": false,
        "comp_str": "CELL(${1:info_type}${2:,${3: [reference]}})",
        "req_param": [
            "info_type"
        ],
        "opt_param": [
            "reference"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CHAR",
        "is_nullary": false,
        "comp_str": "CHAR(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHIDIST",
        "is_nullary": false,
        "comp_str": "CHIDIST(${1:x},${2: deg_freedom})",
        "req_param": [
            "x",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHIINV",
        "is_nullary": false,
        "comp_str": "CHIINV(${1:probability},${2: deg_freedom})",
        "req_param": [
            "probability",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHISQ.DIST",
        "is_nullary": false,
        "comp_str": "CHISQ.DIST(${1:x},${2: deg_freedom},${3: cumulative})",
        "req_param": [
            "x",
            "deg_freedom",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHISQ.DIST.RT",
        "is_nullary": false,
        "comp_str": "CHISQ.DIST.RT(${1:x},${2: deg_freedom})",
        "req_param": [
            "x",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHISQ.INV",
        "is_nullary": false,
        "comp_str": "CHISQ.INV(${1:probability},${2: deg_freedom})",
        "req_param": [
            "probability",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHISQ.INV.RT",
        "is_nullary": false,
        "comp_str": "CHISQ.INV.RT(${1:probability},${2: deg_freedom})",
        "req_param": [
            "probability",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHISQ.TEST",
        "is_nullary": false,
        "comp_str": "CHISQ.TEST(${1:actual_range},${2: expected_range})",
        "req_param": [
            "actual_range",
            "expected_range"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHITEST",
        "is_nullary": false,
        "comp_str": "CHITEST(${1:actual_range},${2: expected_range})",
        "req_param": [
            "actual_range",
            "expected_range"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CHOOSE",
        "is_nullary": false,
        "comp_str": "CHOOSE(${1:index_num},${2: value1}${3:,${4: [value2], ...}})",
        "req_param": [
            "index_num",
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CHOOSECOLS",
        "is_nullary": false,
        "comp_str": "CHOOSECOLS(${1:array},${2: col_num1}${3:,${4: [col_num2], ...}})",
        "req_param": [
            "array",
            "col_num1"
        ],
        "opt_param": [
            "col_num2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CHOOSEROWS",
        "is_nullary": false,
        "comp_str": "CHOOSEROWS(${1:array},${2: row_num1}${3:,${4: [row_num2], ...}})",
        "req_param": [
            "array",
            "row_num1"
        ],
        "opt_param": [
            "row_num2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CLEAN",
        "is_nullary": false,
        "comp_str": "CLEAN(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CODE",
        "is_nullary": false,
        "comp_str": "CODE(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COLUMN",
        "is_nullary": false,
        "comp_str": "COLUMN(${1:,${2: [reference]}})",
        "req_param": [],
        "opt_param": [
            "reference"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COLUMNS",
        "is_nullary": false,
        "comp_str": "COLUMNS(${1:array})",
        "req_param": [
            "array"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COMBIN",
        "is_nullary": false,
        "comp_str": "COMBIN(${1:number},${2: number_chosen})",
        "req_param": [
            "number",
            "number_chosen"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COMBINA",
        "is_nullary": false,
        "comp_str": "COMBINA(${1:number},${2: number_chosen})",
        "req_param": [
            "number",
            "number_chosen"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COMPLEX",
        "is_nullary": false,
        "comp_str": "COMPLEX(${1:real_num},${2: i_num}${3:,${4: [suffix]}})",
        "req_param": [
            "real_num",
            "i_num"
        ],
        "opt_param": [
            "suffix"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CONCAT",
        "is_nullary": false,
        "comp_str": "CONCAT(${1:text1}${2:,${3: [text2], ...}})",
        "req_param": [
            "text1"
        ],
        "opt_param": [
            "text2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CONCATENATE",
        "is_nullary": false,
        "comp_str": "CONCATENATE(${1:text1}${2:,${3: [text2], ...}})",
        "req_param": [
            "text1"
        ],
        "opt_param": [
            "text2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CONFIDENCE",
        "is_nullary": false,
        "comp_str": "CONFIDENCE(${1:alpha},${2: standard_dev},${3: size})",
        "req_param": [
            "alpha",
            "standard_dev",
            "size"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CONFIDENCE.NORM",
        "is_nullary": false,
        "comp_str": "CONFIDENCE.NORM(${1:alpha},${2: standard_dev},${3: size})",
        "req_param": [
            "alpha",
            "standard_dev",
            "size"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CONFIDENCE.T",
        "is_nullary": false,
        "comp_str": "CONFIDENCE.T(${1:alpha},${2: standard_dev},${3: size})",
        "req_param": [
            "alpha",
            "standard_dev",
            "size"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CONVERT",
        "is_nullary": false,
        "comp_str": "CONVERT(${1:number},${2: from_unit},${3: to_unit})",
        "req_param": [
            "number",
            "from_unit",
            "to_unit"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CORREL",
        "is_nullary": false,
        "comp_str": "CORREL(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COS",
        "is_nullary": false,
        "comp_str": "COS(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COSH",
        "is_nullary": false,
        "comp_str": "COSH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COT",
        "is_nullary": false,
        "comp_str": "COT(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COTH",
        "is_nullary": false,
        "comp_str": "COTH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COUNT",
        "is_nullary": false,
        "comp_str": "COUNT(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "COUNTA",
        "is_nullary": false,
        "comp_str": "COUNTA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "COUNTBLANK",
        "is_nullary": false,
        "comp_str": "COUNTBLANK(${1:range})",
        "req_param": [
            "range"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COUNTIF",
        "is_nullary": false,
        "comp_str": "COUNTIF(${1:range},${2: criteria})",
        "req_param": [
            "range",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COUNTIFS",
        "is_nullary": false,
        "comp_str": "COUNTIFS(${1:criteria_range1},${2: criteria1}${3:,${4: [criteria_range2]},${5: [criteria2], ...}})",
        "req_param": [
            "criteria_range1",
            "criteria1"
        ],
        "opt_param": [
            "criteria_range2",
            "criteria2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "COUPDAYBS",
        "is_nullary": false,
        "comp_str": "COUPDAYBS(${1:settlement},${2: maturity},${3: frequency}${4:,${5: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COUPDAYS",
        "is_nullary": false,
        "comp_str": "COUPDAYS(${1:settlement},${2: maturity},${3: frequency}${4:,${5: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COUPDAYSNC",
        "is_nullary": false,
        "comp_str": "COUPDAYSNC(${1:settlement},${2: maturity},${3: frequency}${4:,${5: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COUPNCD",
        "is_nullary": false,
        "comp_str": "COUPNCD(${1:settlement},${2: maturity},${3: frequency}${4:,${5: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COUPNUM",
        "is_nullary": false,
        "comp_str": "COUPNUM(${1:settlement},${2: maturity},${3: frequency}${4:,${5: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COUPPCD",
        "is_nullary": false,
        "comp_str": "COUPPCD(${1:settlement},${2: maturity},${3: frequency}${4:,${5: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "COVAR",
        "is_nullary": false,
        "comp_str": "COVAR(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COVARIANCE.P",
        "is_nullary": false,
        "comp_str": "COVARIANCE.P(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "COVARIANCE.S",
        "is_nullary": false,
        "comp_str": "COVARIANCE.S(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CRITBINOM",
        "is_nullary": false,
        "comp_str": "CRITBINOM(${1:trials},${2: probability_s},${3: alpha})",
        "req_param": [
            "trials",
            "probability_s",
            "alpha"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CSC",
        "is_nullary": false,
        "comp_str": "CSC(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CSCH",
        "is_nullary": false,
        "comp_str": "CSCH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CUBEKPIMEMBER",
        "is_nullary": false,
        "comp_str": "CUBEKPIMEMBER(${1:connection},${2: kpi_name},${3: kpi_property}${4:,${5: [caption]}})",
        "req_param": [
            "connection",
            "kpi_name",
            "kpi_property"
        ],
        "opt_param": [
            "caption"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CUBEMEMBER",
        "is_nullary": false,
        "comp_str": "CUBEMEMBER(${1:connection},${2: member_expression}${3:,${4: [caption]}})",
        "req_param": [
            "connection",
            "member_expression"
        ],
        "opt_param": [
            "caption"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CUBEMEMBERPROPERTY",
        "is_nullary": false,
        "comp_str": "CUBEMEMBERPROPERTY(${1:connection},${2: member_expression},${3: property})",
        "req_param": [
            "connection",
            "member_expression",
            "property"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CUBERANKEDMEMBER",
        "is_nullary": false,
        "comp_str": "CUBERANKEDMEMBER(${1:connection},${2: set_expression},${3: rank}${4:,${5: [caption]}})",
        "req_param": [
            "connection",
            "set_expression",
            "rank"
        ],
        "opt_param": [
            "caption"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CUBESET",
        "is_nullary": false,
        "comp_str": "CUBESET(${1:connection},${2: set_expression}${3:,${4: [caption]},${5: [sort_order]},${6: [sort_by]}})",
        "req_param": [
            "connection",
            "set_expression"
        ],
        "opt_param": [
            "caption",
            "sort_order",
            "sort_by"
        ],
        "ellipsis": false
    },
    {
        "func_name": "CUBESETCOUNT",
        "is_nullary": false,
        "comp_str": "CUBESETCOUNT(${1:set})",
        "req_param": [
            "set"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CUBEVALUE",
        "is_nullary": false,
        "comp_str": "CUBEVALUE(${1:connection}${2:,${3: [member_expression1], ...}})",
        "req_param": [
            "connection"
        ],
        "opt_param": [
            "member_expression1"
        ],
        "ellipsis": true
    },
    {
        "func_name": "CUMIPMT",
        "is_nullary": false,
        "comp_str": "CUMIPMT(${1:rate},${2: nper},${3: pv},${4: start_period},${5: end_period},${6: type})",
        "req_param": [
            "rate",
            "nper",
            "pv",
            "start_period",
            "end_period",
            "type"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "CUMPRINC",
        "is_nullary": false,
        "comp_str": "CUMPRINC(${1:rate},${2: nper},${3: pv},${4: start_period},${5: end_period},${6: type})",
        "req_param": [
            "rate",
            "nper",
            "pv",
            "start_period",
            "end_period",
            "type"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DATE",
        "is_nullary": false,
        "comp_str": "DATE(${1:year},${2: month},${3: day})",
        "req_param": [
            "year",
            "month",
            "day"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DATEDIF",
        "is_nullary": false,
        "comp_str": "DATEDIF(${1:start_date},${2: end_date},${3: unit})",
        "req_param": [
            "start_date",
            "end_date",
            "unit"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DATEVALUE",
        "is_nullary": false,
        "comp_str": "DATEVALUE(${1:date_text})",
        "req_param": [
            "date_text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DAVERAGE",
        "is_nullary": false,
        "comp_str": "DAVERAGE(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DAY",
        "is_nullary": false,
        "comp_str": "DAY(${1:serial_number})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DAYS",
        "is_nullary": false,
        "comp_str": "DAYS(${1:end_date},${2: start_date})",
        "req_param": [
            "end_date",
            "start_date"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DAYS360",
        "is_nullary": false,
        "comp_str": "DAYS360(${1:start_date},${2: end_date}${3:,${4: [method]}})",
        "req_param": [
            "start_date",
            "end_date"
        ],
        "opt_param": [
            "method"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DB",
        "is_nullary": false,
        "comp_str": "DB(${1:cost},${2: salvage},${3: life},${4: period}${5:,${6: [month]}})",
        "req_param": [
            "cost",
            "salvage",
            "life",
            "period"
        ],
        "opt_param": [
            "month"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DBCS",
        "is_nullary": false,
        "comp_str": "DBCS(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DCOUNT",
        "is_nullary": false,
        "comp_str": "DCOUNT(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DCOUNTA",
        "is_nullary": false,
        "comp_str": "DCOUNTA(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DDB",
        "is_nullary": false,
        "comp_str": "DDB(${1:cost},${2: salvage},${3: life},${4: period}${5:,${6: [factor]}})",
        "req_param": [
            "cost",
            "salvage",
            "life",
            "period"
        ],
        "opt_param": [
            "factor"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DEC2BIN",
        "is_nullary": false,
        "comp_str": "DEC2BIN(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DEC2HEX",
        "is_nullary": false,
        "comp_str": "DEC2HEX(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DEC2OCT",
        "is_nullary": false,
        "comp_str": "DEC2OCT(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DECIMAL",
        "is_nullary": false,
        "comp_str": "DECIMAL(${1:number},${2: radix})",
        "req_param": [
            "number",
            "radix"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DEGREES",
        "is_nullary": false,
        "comp_str": "DEGREES(${1:angle})",
        "req_param": [
            "angle"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DELTA",
        "is_nullary": false,
        "comp_str": "DELTA(${1:number1}${2:,${3: [number2]}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DEVSQ",
        "is_nullary": false,
        "comp_str": "DEVSQ(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "DGET",
        "is_nullary": false,
        "comp_str": "DGET(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DISC",
        "is_nullary": false,
        "comp_str": "DISC(${1:settlement},${2: maturity},${3: pr},${4: redemption}${5:,${6: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "pr",
            "redemption"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DMAX",
        "is_nullary": false,
        "comp_str": "DMAX(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DMIN",
        "is_nullary": false,
        "comp_str": "DMIN(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DOLLAR",
        "is_nullary": false,
        "comp_str": "DOLLAR(${1:number}${2:,${3: [decimals]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "decimals"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DOLLARDE",
        "is_nullary": false,
        "comp_str": "DOLLARDE(${1:fractional_dollar},${2: fraction})",
        "req_param": [
            "fractional_dollar",
            "fraction"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DOLLARFR",
        "is_nullary": false,
        "comp_str": "DOLLARFR(${1:decimal_dollar},${2: fraction})",
        "req_param": [
            "decimal_dollar",
            "fraction"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DPRODUCT",
        "is_nullary": false,
        "comp_str": "DPRODUCT(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DROP",
        "is_nullary": false,
        "comp_str": "DROP(${1:array},${2: rows}${3:,${4: [columns]}})",
        "req_param": [
            "array",
            "rows"
        ],
        "opt_param": [
            "columns"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DSTDEV",
        "is_nullary": false,
        "comp_str": "DSTDEV(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DSTDEVP",
        "is_nullary": false,
        "comp_str": "DSTDEVP(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DSUM",
        "is_nullary": false,
        "comp_str": "DSUM(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DURATION",
        "is_nullary": false,
        "comp_str": "DURATION(${1:settlement},${2: maturity},${3: coupon},${4: yld},${5: frequency}${6:,${7: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "coupon",
            "yld",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "DVAR",
        "is_nullary": false,
        "comp_str": "DVAR(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "DVARP",
        "is_nullary": false,
        "comp_str": "DVARP(${1:database},${2: field},${3: criteria})",
        "req_param": [
            "database",
            "field",
            "criteria"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EDATE",
        "is_nullary": false,
        "comp_str": "EDATE(${1:start_date},${2: months})",
        "req_param": [
            "start_date",
            "months"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EFFECT",
        "is_nullary": false,
        "comp_str": "EFFECT(${1:nominal_rate},${2: npery})",
        "req_param": [
            "nominal_rate",
            "npery"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ENCODEURL",
        "is_nullary": false,
        "comp_str": "ENCODEURL(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EOMONTH",
        "is_nullary": false,
        "comp_str": "EOMONTH(${1:start_date},${2: months})",
        "req_param": [
            "start_date",
            "months"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ERF",
        "is_nullary": false,
        "comp_str": "ERF(${1:lower_limit}${2:,${3: [upper_limit]}})",
        "req_param": [
            "lower_limit"
        ],
        "opt_param": [
            "upper_limit"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ERF.PRECISE",
        "is_nullary": false,
        "comp_str": "ERF.PRECISE(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ERFC",
        "is_nullary": false,
        "comp_str": "ERFC(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ERFC.PRECISE",
        "is_nullary": false,
        "comp_str": "ERFC.PRECISE(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ERROR.TYPE",
        "is_nullary": false,
        "comp_str": "ERROR.TYPE(${1:error_val})",
        "req_param": [
            "error_val"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EUROCONVERT",
        "is_nullary": false,
        "comp_str": "EUROCONVERT(${1:number},${2: source},${3: target},${4: full_precision},${5: triangulation_precision})",
        "req_param": [
            "number",
            "source",
            "target",
            "full_precision",
            "triangulation_precision"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EVEN",
        "is_nullary": false,
        "comp_str": "EVEN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EXACT",
        "is_nullary": false,
        "comp_str": "EXACT(${1:text1},${2: text2})",
        "req_param": [
            "text1",
            "text2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EXP",
        "is_nullary": false,
        "comp_str": "EXP(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EXPAND",
        "is_nullary": false,
        "comp_str": "EXPAND(${1:array},${2: rows}${3:,${4: [columns]},${5: [pad_with]}})",
        "req_param": [
            "array",
            "rows"
        ],
        "opt_param": [
            "columns",
            "pad_with"
        ],
        "ellipsis": false
    },
    {
        "func_name": "EXPON.DIST",
        "is_nullary": false,
        "comp_str": "EXPON.DIST(${1:x},${2: lambda},${3: cumulative})",
        "req_param": [
            "x",
            "lambda",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "EXPONDIST",
        "is_nullary": false,
        "comp_str": "EXPONDIST(${1:x},${2: lambda},${3: cumulative})",
        "req_param": [
            "x",
            "lambda",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "F.DIST",
        "is_nullary": false,
        "comp_str": "F.DIST(${1:x},${2: deg_freedom1},${3: deg_freedom2},${4: cumulative})",
        "req_param": [
            "x",
            "deg_freedom1",
            "deg_freedom2",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "F.DIST.RT",
        "is_nullary": false,
        "comp_str": "F.DIST.RT(${1:x},${2: deg_freedom1},${3: deg_freedom2})",
        "req_param": [
            "x",
            "deg_freedom1",
            "deg_freedom2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "F.INV",
        "is_nullary": false,
        "comp_str": "F.INV(${1:probability},${2: deg_freedom1},${3: deg_freedom2})",
        "req_param": [
            "probability",
            "deg_freedom1",
            "deg_freedom2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "F.INV.RT",
        "is_nullary": false,
        "comp_str": "F.INV.RT(${1:probability},${2: deg_freedom1},${3: deg_freedom2})",
        "req_param": [
            "probability",
            "deg_freedom1",
            "deg_freedom2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "F.TEST",
        "is_nullary": false,
        "comp_str": "F.TEST(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FACT",
        "is_nullary": false,
        "comp_str": "FACT(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FACTDOUBLE",
        "is_nullary": false,
        "comp_str": "FACTDOUBLE(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FDIST",
        "is_nullary": false,
        "comp_str": "FDIST(${1:x},${2: deg_freedom1},${3: deg_freedom2})",
        "req_param": [
            "x",
            "deg_freedom1",
            "deg_freedom2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FILTER",
        "is_nullary": false,
        "comp_str": "FILTER(${1:array},${2: include}${3:,${4: [if_empty]}})",
        "req_param": [
            "array",
            "include"
        ],
        "opt_param": [
            "if_empty"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FILTERXML",
        "is_nullary": false,
        "comp_str": "FILTERXML(${1:xml},${2: xpath})",
        "req_param": [
            "xml",
            "xpath"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FIND",
        "is_nullary": false,
        "comp_str": "FIND(${1:find_text},${2: within_text}${3:,${4: [start_num]}})",
        "req_param": [
            "find_text",
            "within_text"
        ],
        "opt_param": [
            "start_num"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FINDB",
        "is_nullary": false,
        "comp_str": "FINDB(${1:find_text},${2: within_text}${3:,${4: [start_num]}})",
        "req_param": [
            "find_text",
            "within_text"
        ],
        "opt_param": [
            "start_num"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FINV",
        "is_nullary": false,
        "comp_str": "FINV(${1:probability},${2: deg_freedom1},${3: deg_freedom2})",
        "req_param": [
            "probability",
            "deg_freedom1",
            "deg_freedom2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FISHER",
        "is_nullary": false,
        "comp_str": "FISHER(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FISHERINV",
        "is_nullary": false,
        "comp_str": "FISHERINV(${1:y})",
        "req_param": [
            "y"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FIXED",
        "is_nullary": false,
        "comp_str": "FIXED(${1:number}${2:,${3: [decimals]},${4: [no_commas]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "decimals",
            "no_commas"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FLOOR",
        "is_nullary": false,
        "comp_str": "FLOOR(${1:number},${2: significance})",
        "req_param": [
            "number",
            "significance"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FLOOR.MATH",
        "is_nullary": false,
        "comp_str": "FLOOR.MATH(${1:number}${2:,${3: [significance]},${4: [mode]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "significance",
            "mode"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FLOOR.PRECISE",
        "is_nullary": false,
        "comp_str": "FLOOR.PRECISE(${1:number}${2:,${3: [significance]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "significance"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FORECAST",
        "is_nullary": false,
        "comp_str": "FORECAST(${1:x},${2: known_ys},${3: known_xs})",
        "req_param": [
            "x",
            "known_ys",
            "known_xs"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FORECAST.ETS",
        "is_nullary": false,
        "comp_str": "FORECAST.ETS(${1:target_date},${2: values},${3: timeline}${4:,${5: [seasonality]},${6: [data_completion]},${7: [aggregation]}})",
        "req_param": [
            "target_date",
            "values",
            "timeline"
        ],
        "opt_param": [
            "seasonality",
            "data_completion",
            "aggregation"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FORECAST.ETS.CONFINT",
        "is_nullary": false,
        "comp_str": "FORECAST.ETS.CONFINT(${1:target_date},${2: values},${3: timeline}${4:,${5: [confidence_level]},${6: [seasonality]},${7: [data_completion]},${8: [aggregation]}})",
        "req_param": [
            "target_date",
            "values",
            "timeline"
        ],
        "opt_param": [
            "confidence_level",
            "seasonality",
            "data_completion",
            "aggregation"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FORECAST.ETS.SEASONALITY",
        "is_nullary": false,
        "comp_str": "FORECAST.ETS.SEASONALITY(${1:values},${2: timeline}${3:,${4: [data_completion]},${5: [aggregation]}})",
        "req_param": [
            "values",
            "timeline"
        ],
        "opt_param": [
            "data_completion",
            "aggregation"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FORECAST.ETS.STAT",
        "is_nullary": false,
        "comp_str": "FORECAST.ETS.STAT(${1:values},${2: timeline},${3: statistic_type}${4:,${5: [seasonality]},${6: [data_completion]},${7: [aggregation]}})",
        "req_param": [
            "values",
            "timeline",
            "statistic_type"
        ],
        "opt_param": [
            "seasonality",
            "data_completion",
            "aggregation"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FORECAST.LINEAR",
        "is_nullary": false,
        "comp_str": "FORECAST.LINEAR(${1:x},${2: known_ys},${3: known_xs})",
        "req_param": [
            "x",
            "known_ys",
            "known_xs"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FORMULATEXT",
        "is_nullary": false,
        "comp_str": "FORMULATEXT(${1:reference})",
        "req_param": [
            "reference"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FREQUENCY",
        "is_nullary": false,
        "comp_str": "FREQUENCY(${1:data_array},${2: bins_array})",
        "req_param": [
            "data_array",
            "bins_array"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FTEST",
        "is_nullary": false,
        "comp_str": "FTEST(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "FV",
        "is_nullary": false,
        "comp_str": "FV(${1:rate},${2: nper},${3: pmt}${4:,${5: [pv]},${6: [type]}})",
        "req_param": [
            "rate",
            "nper",
            "pmt"
        ],
        "opt_param": [
            "pv",
            "type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "FVSCHEDULE",
        "is_nullary": false,
        "comp_str": "FVSCHEDULE(${1:principal},${2: schedule})",
        "req_param": [
            "principal",
            "schedule"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMA",
        "is_nullary": false,
        "comp_str": "GAMMA(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMA.DIST",
        "is_nullary": false,
        "comp_str": "GAMMA.DIST(${1:x},${2: alpha},${3: beta},${4: cumulative})",
        "req_param": [
            "x",
            "alpha",
            "beta",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMA.INV",
        "is_nullary": false,
        "comp_str": "GAMMA.INV(${1:probability},${2: alpha},${3: beta})",
        "req_param": [
            "probability",
            "alpha",
            "beta"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMADIST",
        "is_nullary": false,
        "comp_str": "GAMMADIST(${1:x},${2: alpha},${3: beta},${4: cumulative})",
        "req_param": [
            "x",
            "alpha",
            "beta",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMAINV",
        "is_nullary": false,
        "comp_str": "GAMMAINV(${1:probability},${2: alpha},${3: beta})",
        "req_param": [
            "probability",
            "alpha",
            "beta"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMALN",
        "is_nullary": false,
        "comp_str": "GAMMALN(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAMMALN.PRECISE",
        "is_nullary": false,
        "comp_str": "GAMMALN.PRECISE(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GAUSS",
        "is_nullary": false,
        "comp_str": "GAUSS(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "GCD",
        "is_nullary": false,
        "comp_str": "GCD(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "GEOMEAN",
        "is_nullary": false,
        "comp_str": "GEOMEAN(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "GESTEP",
        "is_nullary": false,
        "comp_str": "GESTEP(${1:number}${2:,${3: [step]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "step"
        ],
        "ellipsis": false
    },
    {
        "func_name": "GETPIVOTDATA",
        "is_nullary": false,
        "comp_str": "GETPIVOTDATA(${1:data_field},${2: pivot_table}${3:,${4: [field1]},${5: [item1], ...}})",
        "req_param": [
            "data_field",
            "pivot_table"
        ],
        "opt_param": [
            "field1",
            "item1"
        ],
        "ellipsis": true
    },
    {
        "func_name": "GROWTH",
        "is_nullary": false,
        "comp_str": "GROWTH(${1:known_ys}${2:,${3: [known_xs]},${4: [new_xs]},${5: [const]}})",
        "req_param": [
            "known_ys"
        ],
        "opt_param": [
            "known_xs",
            "new_xs",
            "const"
        ],
        "ellipsis": false
    },
    {
        "func_name": "HARMEAN",
        "is_nullary": false,
        "comp_str": "HARMEAN(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "HEX2BIN",
        "is_nullary": false,
        "comp_str": "HEX2BIN(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "HEX2DEC",
        "is_nullary": false,
        "comp_str": "HEX2DEC(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "HEX2OCT",
        "is_nullary": false,
        "comp_str": "HEX2OCT(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "HLOOKUP",
        "is_nullary": false,
        "comp_str": "HLOOKUP(${1:lookup_value},${2: table_array},${3: row_index_num}${4:,${5: [range_lookup]}})",
        "req_param": [
            "lookup_value",
            "table_array",
            "row_index_num"
        ],
        "opt_param": [
            "range_lookup"
        ],
        "ellipsis": false
    },
    {
        "func_name": "HOUR",
        "is_nullary": false,
        "comp_str": "HOUR(${1:serial_number})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "HSTACK",
        "is_nullary": false,
        "comp_str": "HSTACK(${1:array1}${2:,${3: [array2], ...}})",
        "req_param": [
            "array1"
        ],
        "opt_param": [
            "array2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "HYPERLINK",
        "is_nullary": false,
        "comp_str": "HYPERLINK(${1:link_location}${2:,${3: [friendly_name]}})",
        "req_param": [
            "link_location"
        ],
        "opt_param": [
            "friendly_name"
        ],
        "ellipsis": false
    },
    {
        "func_name": "HYPGEOM.DIST",
        "is_nullary": false,
        "comp_str": "HYPGEOM.DIST(${1:sample_s},${2: number_sample},${3: population_s},${4: number_pop},${5: cumulative})",
        "req_param": [
            "sample_s",
            "number_sample",
            "population_s",
            "number_pop",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "HYPGEOMDIST",
        "is_nullary": false,
        "comp_str": "HYPGEOMDIST(${1:sample_s},${2: number_sample},${3: population_s},${4: number_pop})",
        "req_param": [
            "sample_s",
            "number_sample",
            "population_s",
            "number_pop"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IF",
        "is_nullary": false,
        "comp_str": "IF(${1:logical_test}${2:,${3: [value_if_true]},${4: [value_if_false]}})",
        "req_param": [
            "logical_test"
        ],
        "opt_param": [
            "value_if_true",
            "value_if_false"
        ],
        "ellipsis": false
    },
    {
        "func_name": "IFERROR",
        "is_nullary": false,
        "comp_str": "IFERROR(${1:value},${2: value_if_error})",
        "req_param": [
            "value",
            "value_if_error"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IFNA",
        "is_nullary": false,
        "comp_str": "IFNA(${1:value},${2: value_if_na})",
        "req_param": [
            "value",
            "value_if_na"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IFS",
        "is_nullary": false,
        "comp_str": "IFS(${1:logical_test1},${2: value_if_true1}${3:,${4: [logical_test2]},${5: [value_if_true2], ...}})",
        "req_param": [
            "logical_test1",
            "value_if_true1"
        ],
        "opt_param": [
            "logical_test2",
            "value_if_true2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "IMABS",
        "is_nullary": false,
        "comp_str": "IMABS(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMAGE",
        "is_nullary": false,
        "comp_str": "IMAGE(${1:source}${2:,${3: [alt_text]},${4: [sizing]},${5: [height]},${6: [width]}})",
        "req_param": [
            "source"
        ],
        "opt_param": [
            "alt_text",
            "sizing",
            "height",
            "width"
        ],
        "ellipsis": false
    },
    {
        "func_name": "IMAGINARY",
        "is_nullary": false,
        "comp_str": "IMAGINARY(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMARGUMENT",
        "is_nullary": false,
        "comp_str": "IMARGUMENT(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMCONJUGATE",
        "is_nullary": false,
        "comp_str": "IMCONJUGATE(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMCOS",
        "is_nullary": false,
        "comp_str": "IMCOS(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMCOSH",
        "is_nullary": false,
        "comp_str": "IMCOSH(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMCOT",
        "is_nullary": false,
        "comp_str": "IMCOT(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMCSC",
        "is_nullary": false,
        "comp_str": "IMCSC(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMCSCH",
        "is_nullary": false,
        "comp_str": "IMCSCH(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMDIV",
        "is_nullary": false,
        "comp_str": "IMDIV(${1:inumber1},${2: inumber2})",
        "req_param": [
            "inumber1",
            "inumber2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMEXP",
        "is_nullary": false,
        "comp_str": "IMEXP(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMLN",
        "is_nullary": false,
        "comp_str": "IMLN(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMLOG10",
        "is_nullary": false,
        "comp_str": "IMLOG10(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMLOG2",
        "is_nullary": false,
        "comp_str": "IMLOG2(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMPOWER",
        "is_nullary": false,
        "comp_str": "IMPOWER(${1:inumber},${2: number})",
        "req_param": [
            "inumber",
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMPRODUCT",
        "is_nullary": false,
        "comp_str": "IMPRODUCT(${1:inumber1}${2:,${3: [inumber2], ...}})",
        "req_param": [
            "inumber1"
        ],
        "opt_param": [
            "inumber2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "IMREAL",
        "is_nullary": false,
        "comp_str": "IMREAL(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSEC",
        "is_nullary": false,
        "comp_str": "IMSEC(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSECH",
        "is_nullary": false,
        "comp_str": "IMSECH(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSIN",
        "is_nullary": false,
        "comp_str": "IMSIN(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSINH",
        "is_nullary": false,
        "comp_str": "IMSINH(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSQRT",
        "is_nullary": false,
        "comp_str": "IMSQRT(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSUB",
        "is_nullary": false,
        "comp_str": "IMSUB(${1:inumber1},${2: inumber2})",
        "req_param": [
            "inumber1",
            "inumber2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "IMSUM",
        "is_nullary": false,
        "comp_str": "IMSUM(${1:inumber1}${2:,${3: [inumber2], ...}})",
        "req_param": [
            "inumber1"
        ],
        "opt_param": [
            "inumber2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "IMTAN",
        "is_nullary": false,
        "comp_str": "IMTAN(${1:inumber})",
        "req_param": [
            "inumber"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "INDEX",
        "is_nullary": false,
        "comp_str": "INDEX(${1:array},${2: row_num}${3:,${4: [column_num]}})",
        "req_param": [
            "array",
            "row_num"
        ],
        "opt_param": [
            "column_num"
        ],
        "ellipsis": false
    },
    {
        "func_name": "INDIRECT",
        "is_nullary": false,
        "comp_str": "INDIRECT(${1:ref_text}${2:,${3: [a1]}})",
        "req_param": [
            "ref_text"
        ],
        "opt_param": [
            "a1"
        ],
        "ellipsis": false
    },
    {
        "func_name": "INFO",
        "is_nullary": false,
        "comp_str": "INFO(${1:type_text})",
        "req_param": [
            "type_text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "INT",
        "is_nullary": false,
        "comp_str": "INT(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "INTERCEPT",
        "is_nullary": false,
        "comp_str": "INTERCEPT(${1:known_ys},${2: known_xs})",
        "req_param": [
            "known_ys",
            "known_xs"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "INTRATE",
        "is_nullary": false,
        "comp_str": "INTRATE(${1:settlement},${2: maturity},${3: investment},${4: redemption}${5:,${6: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "investment",
            "redemption"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "IPMT",
        "is_nullary": false,
        "comp_str": "IPMT(${1:rate},${2: per},${3: nper},${4: pv}${5:,${6: [fv]},${7: [type]}})",
        "req_param": [
            "rate",
            "per",
            "nper",
            "pv"
        ],
        "opt_param": [
            "fv",
            "type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "IRR",
        "is_nullary": false,
        "comp_str": "IRR(${1:values}${2:,${3: [guess]}})",
        "req_param": [
            "values"
        ],
        "opt_param": [
            "guess"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ISBLANK",
        "is_nullary": false,
        "comp_str": "ISBLANK(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISERR",
        "is_nullary": false,
        "comp_str": "ISERR(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISERROR",
        "is_nullary": false,
        "comp_str": "ISERROR(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISEVEN",
        "is_nullary": false,
        "comp_str": "ISEVEN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISFORMULA",
        "is_nullary": false,
        "comp_str": "ISFORMULA(${1:reference})",
        "req_param": [
            "reference"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISLOGICAL",
        "is_nullary": false,
        "comp_str": "ISLOGICAL(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISNA",
        "is_nullary": false,
        "comp_str": "ISNA(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISNONTEXT",
        "is_nullary": false,
        "comp_str": "ISNONTEXT(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISNUMBER",
        "is_nullary": false,
        "comp_str": "ISNUMBER(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISO.CEILING",
        "is_nullary": false,
        "comp_str": "ISO.CEILING(${1:number}${2:,${3: [significance]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "significance"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ISODD",
        "is_nullary": false,
        "comp_str": "ISODD(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISOMITTED",
        "is_nullary": false,
        "comp_str": "ISOMITTED(${1:argument})",
        "req_param": [
            "argument"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISOWEEKNUM",
        "is_nullary": false,
        "comp_str": "ISOWEEKNUM(${1:date})",
        "req_param": [
            "date"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISPMT",
        "is_nullary": false,
        "comp_str": "ISPMT(${1:rate},${2: per},${3: nper},${4: pv})",
        "req_param": [
            "rate",
            "per",
            "nper",
            "pv"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISREF",
        "is_nullary": false,
        "comp_str": "ISREF(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ISTEXT",
        "is_nullary": false,
        "comp_str": "ISTEXT(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "JIS",
        "is_nullary": false,
        "comp_str": "JIS(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "KURT",
        "is_nullary": false,
        "comp_str": "KURT(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "LAMBDA",
        "is_nullary": false,
        "comp_str": "LAMBDA(${1:parameter_or_calculation1}${2:,${3: [parameter_or_calculation2], ...}})",
        "req_param": [
            "parameter_or_calculation1"
        ],
        "opt_param": [
            "parameter_or_calculation2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "LARGE",
        "is_nullary": false,
        "comp_str": "LARGE(${1:array},${2: k})",
        "req_param": [
            "array",
            "k"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LCM",
        "is_nullary": false,
        "comp_str": "LCM(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "LEFT",
        "is_nullary": false,
        "comp_str": "LEFT(${1:text}${2:,${3: [num_chars]}})",
        "req_param": [
            "text"
        ],
        "opt_param": [
            "num_chars"
        ],
        "ellipsis": false
    },
    {
        "func_name": "LEFTB",
        "is_nullary": false,
        "comp_str": "LEFTB(${1:text}${2:,${3: [num_bytes]}})",
        "req_param": [
            "text"
        ],
        "opt_param": [
            "num_bytes"
        ],
        "ellipsis": false
    },
    {
        "func_name": "LEN",
        "is_nullary": false,
        "comp_str": "LEN(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LENB",
        "is_nullary": false,
        "comp_str": "LENB(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LET",
        "is_nullary": false,
        "comp_str": "LET(${1:name1},${2: name_value1},${3: calculation_or_name2}${4:,${5: [name_value2], ...}})",
        "req_param": [
            "name1",
            "name_value1",
            "calculation_or_name2"
        ],
        "opt_param": [
            "name_value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "LINEST",
        "is_nullary": false,
        "comp_str": "LINEST(${1:known_ys}${2:,${3: [known_xs]},${4: [const]},${5: [stats]}})",
        "req_param": [
            "known_ys"
        ],
        "opt_param": [
            "known_xs",
            "const",
            "stats"
        ],
        "ellipsis": false
    },
    {
        "func_name": "LN",
        "is_nullary": false,
        "comp_str": "LN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LOG",
        "is_nullary": false,
        "comp_str": "LOG(${1:number}${2:,${3: [base]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "base"
        ],
        "ellipsis": false
    },
    {
        "func_name": "LOG10",
        "is_nullary": false,
        "comp_str": "LOG10(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LOGEST",
        "is_nullary": false,
        "comp_str": "LOGEST(${1:known_ys}${2:,${3: [known_xs]},${4: [const]},${5: [stats]}})",
        "req_param": [
            "known_ys"
        ],
        "opt_param": [
            "known_xs",
            "const",
            "stats"
        ],
        "ellipsis": false
    },
    {
        "func_name": "LOGINV",
        "is_nullary": false,
        "comp_str": "LOGINV(${1:probability},${2: mean},${3: standard_dev})",
        "req_param": [
            "probability",
            "mean",
            "standard_dev"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LOGNORM.DIST",
        "is_nullary": false,
        "comp_str": "LOGNORM.DIST(${1:x},${2: mean},${3: standard_dev},${4: cumulative})",
        "req_param": [
            "x",
            "mean",
            "standard_dev",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LOGNORM.INV",
        "is_nullary": false,
        "comp_str": "LOGNORM.INV(${1:probability},${2: mean},${3: standard_dev})",
        "req_param": [
            "probability",
            "mean",
            "standard_dev"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LOGNORMDIST",
        "is_nullary": false,
        "comp_str": "LOGNORMDIST(${1:x},${2: mean},${3: standard_dev})",
        "req_param": [
            "x",
            "mean",
            "standard_dev"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "LOOKUP",
        "is_nullary": false,
        "comp_str": "LOOKUP(${1:lookup_value},${2: lookup_vector}${3:,${4: [result_vector]}})",
        "req_param": [
            "lookup_value",
            "lookup_vector"
        ],
        "opt_param": [
            "result_vector"
        ],
        "ellipsis": false
    },
    {
        "func_name": "LOWER",
        "is_nullary": false,
        "comp_str": "LOWER(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MAKEARRAY",
        "is_nullary": false,
        "comp_str": "MAKEARRAY(${1:rows},${2: columns},${3: function})",
        "req_param": [
            "rows",
            "columns",
            "function"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MAP",
        "is_nullary": false,
        "comp_str": "MAP(${1:array},${2: lambda_or_array2}${3:,${4: [lambda_or_array3], ...}})",
        "req_param": [
            "array",
            "lambda_or_array2"
        ],
        "opt_param": [
            "lambda_or_array3"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MATCH",
        "is_nullary": false,
        "comp_str": "MATCH(${1:lookup_value},${2: lookup_array}${3:,${4: [match_type]}})",
        "req_param": [
            "lookup_value",
            "lookup_array"
        ],
        "opt_param": [
            "match_type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "MAX",
        "is_nullary": false,
        "comp_str": "MAX(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MAXA",
        "is_nullary": false,
        "comp_str": "MAXA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MAXIFS",
        "is_nullary": false,
        "comp_str": "MAXIFS(${1:max_range},${2: criteria_range1},${3: criteria1}${4:,${5: [criteria_range2]},${6: [criteria2], ...}})",
        "req_param": [
            "max_range",
            "criteria_range1",
            "criteria1"
        ],
        "opt_param": [
            "criteria_range2",
            "criteria2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MDETERM",
        "is_nullary": false,
        "comp_str": "MDETERM(${1:array})",
        "req_param": [
            "array"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MDURATION",
        "is_nullary": false,
        "comp_str": "MDURATION(${1:settlement},${2: maturity},${3: coupon},${4: yld},${5: frequency}${6:,${7: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "coupon",
            "yld",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "MEDIAN",
        "is_nullary": false,
        "comp_str": "MEDIAN(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MID",
        "is_nullary": false,
        "comp_str": "MID(${1:text},${2: start_num},${3: num_chars})",
        "req_param": [
            "text",
            "start_num",
            "num_chars"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MIDB",
        "is_nullary": false,
        "comp_str": "MIDB(${1:text},${2: start_num},${3: num_bytes})",
        "req_param": [
            "text",
            "start_num",
            "num_bytes"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MIN",
        "is_nullary": false,
        "comp_str": "MIN(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MINA",
        "is_nullary": false,
        "comp_str": "MINA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MINIFS",
        "is_nullary": false,
        "comp_str": "MINIFS(${1:min_range},${2: criteria_range1},${3: criteria1}${4:,${5: [criteria_range2]},${6: [criteria2], ...}})",
        "req_param": [
            "min_range",
            "criteria_range1",
            "criteria1"
        ],
        "opt_param": [
            "criteria_range2",
            "criteria2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MINUTE",
        "is_nullary": false,
        "comp_str": "MINUTE(${1:serial_number})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MINVERSE",
        "is_nullary": false,
        "comp_str": "MINVERSE(${1:array})",
        "req_param": [
            "array"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MIRR",
        "is_nullary": false,
        "comp_str": "MIRR(${1:values},${2: finance_rate},${3: reinvest_rate})",
        "req_param": [
            "values",
            "finance_rate",
            "reinvest_rate"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MMULT",
        "is_nullary": false,
        "comp_str": "MMULT(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MOD",
        "is_nullary": false,
        "comp_str": "MOD(${1:number},${2: divisor})",
        "req_param": [
            "number",
            "divisor"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MODE",
        "is_nullary": false,
        "comp_str": "MODE(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MODE.MULT",
        "is_nullary": false,
        "comp_str": "MODE.MULT(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MODE.SNGL",
        "is_nullary": false,
        "comp_str": "MODE.SNGL(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MONTH",
        "is_nullary": false,
        "comp_str": "MONTH(${1:serial_number})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MROUND",
        "is_nullary": false,
        "comp_str": "MROUND(${1:number},${2: multiple})",
        "req_param": [
            "number",
            "multiple"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "MULTINOMIAL",
        "is_nullary": false,
        "comp_str": "MULTINOMIAL(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "MUNIT",
        "is_nullary": false,
        "comp_str": "MUNIT(${1:dimension})",
        "req_param": [
            "dimension"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "N",
        "is_nullary": false,
        "comp_str": "N(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NEGBINOM.DIST",
        "is_nullary": false,
        "comp_str": "NEGBINOM.DIST(${1:number_f},${2: number_s},${3: probability_s},${4: cumulative})",
        "req_param": [
            "number_f",
            "number_s",
            "probability_s",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NEGBINOMDIST",
        "is_nullary": false,
        "comp_str": "NEGBINOMDIST(${1:number_f},${2: number_s},${3: probability_s})",
        "req_param": [
            "number_f",
            "number_s",
            "probability_s"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NETWORKDAYS",
        "is_nullary": false,
        "comp_str": "NETWORKDAYS(${1:start_date},${2: end_date}${3:,${4: [holidays]}})",
        "req_param": [
            "start_date",
            "end_date"
        ],
        "opt_param": [
            "holidays"
        ],
        "ellipsis": false
    },
    {
        "func_name": "NETWORKDAYS.INTL",
        "is_nullary": false,
        "comp_str": "NETWORKDAYS.INTL(${1:start_date},${2: end_date}${3:,${4: [weekend]},${5: [holidays]}})",
        "req_param": [
            "start_date",
            "end_date"
        ],
        "opt_param": [
            "weekend",
            "holidays"
        ],
        "ellipsis": false
    },
    {
        "func_name": "NOMINAL",
        "is_nullary": false,
        "comp_str": "NOMINAL(${1:effect_rate},${2: npery})",
        "req_param": [
            "effect_rate",
            "npery"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORM.DIST",
        "is_nullary": false,
        "comp_str": "NORM.DIST(${1:x},${2: mean},${3: standard_dev},${4: cumulative})",
        "req_param": [
            "x",
            "mean",
            "standard_dev",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORM.INV",
        "is_nullary": false,
        "comp_str": "NORM.INV(${1:probability},${2: mean},${3: standard_dev})",
        "req_param": [
            "probability",
            "mean",
            "standard_dev"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORM.S.DIST",
        "is_nullary": false,
        "comp_str": "NORM.S.DIST(${1:z},${2: cumulative})",
        "req_param": [
            "z",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORM.S.INV",
        "is_nullary": false,
        "comp_str": "NORM.S.INV(${1:probability})",
        "req_param": [
            "probability"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORMDIST",
        "is_nullary": false,
        "comp_str": "NORMDIST(${1:x},${2: mean},${3: standard_dev},${4: cumulative})",
        "req_param": [
            "x",
            "mean",
            "standard_dev",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORMINV",
        "is_nullary": false,
        "comp_str": "NORMINV(${1:probability},${2: mean},${3: standard_dev})",
        "req_param": [
            "probability",
            "mean",
            "standard_dev"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORMSDIST",
        "is_nullary": false,
        "comp_str": "NORMSDIST(${1:z})",
        "req_param": [
            "z"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NORMSINV",
        "is_nullary": false,
        "comp_str": "NORMSINV(${1:probability})",
        "req_param": [
            "probability"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NOT",
        "is_nullary": false,
        "comp_str": "NOT(${1:logical})",
        "req_param": [
            "logical"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "NPER",
        "is_nullary": false,
        "comp_str": "NPER(${1:rate},${2: pmt},${3: pv}${4:,${5: [fv]},${6: [type]}})",
        "req_param": [
            "rate",
            "pmt",
            "pv"
        ],
        "opt_param": [
            "fv",
            "type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "NPV",
        "is_nullary": false,
        "comp_str": "NPV(${1:rate},${2: value1}${3:,${4: [value2], ...}})",
        "req_param": [
            "rate",
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "NUMBERVALUE",
        "is_nullary": false,
        "comp_str": "NUMBERVALUE(${1:text}${2:,${3: [decimal_separator]},${4: [group_separator]}})",
        "req_param": [
            "text"
        ],
        "opt_param": [
            "decimal_separator",
            "group_separator"
        ],
        "ellipsis": false
    },
    {
        "func_name": "OCT2BIN",
        "is_nullary": false,
        "comp_str": "OCT2BIN(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "OCT2DEC",
        "is_nullary": false,
        "comp_str": "OCT2DEC(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "OCT2HEX",
        "is_nullary": false,
        "comp_str": "OCT2HEX(${1:number}${2:,${3: [places]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "places"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ODD",
        "is_nullary": false,
        "comp_str": "ODD(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ODDFPRICE",
        "is_nullary": false,
        "comp_str": "ODDFPRICE(${1:settlement},${2: maturity},${3: issue},${4: first_coupon},${5: rate},${6: yld},${7: redemption},${8: frequency}${9:,${10: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "issue",
            "first_coupon",
            "rate",
            "yld",
            "redemption",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ODDFYIELD",
        "is_nullary": false,
        "comp_str": "ODDFYIELD(${1:settlement},${2: maturity},${3: issue},${4: first_coupon},${5: rate},${6: pr},${7: redemption},${8: frequency}${9:,${10: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "issue",
            "first_coupon",
            "rate",
            "pr",
            "redemption",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ODDLPRICE",
        "is_nullary": false,
        "comp_str": "ODDLPRICE(${1:settlement},${2: maturity},${3: last_interest},${4: rate},${5: yld},${6: redemption},${7: frequency}${8:,${9: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "last_interest",
            "rate",
            "yld",
            "redemption",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ODDLYIELD",
        "is_nullary": false,
        "comp_str": "ODDLYIELD(${1:settlement},${2: maturity},${3: last_interest},${4: rate},${5: pr},${6: redemption},${7: frequency}${8:,${9: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "last_interest",
            "rate",
            "pr",
            "redemption",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "OFFSET",
        "is_nullary": false,
        "comp_str": "OFFSET(${1:reference},${2: rows},${3: cols}${4:,${5: [height]},${6: [width]}})",
        "req_param": [
            "reference",
            "rows",
            "cols"
        ],
        "opt_param": [
            "height",
            "width"
        ],
        "ellipsis": false
    },
    {
        "func_name": "OR",
        "is_nullary": false,
        "comp_str": "OR(${1:logical1}${2:,${3: [logical2], ...}})",
        "req_param": [
            "logical1"
        ],
        "opt_param": [
            "logical2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "PDURATION",
        "is_nullary": false,
        "comp_str": "PDURATION(${1:rate},${2: py},${3: fv})",
        "req_param": [
            "rate",
            "py",
            "fv"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PEARSON",
        "is_nullary": false,
        "comp_str": "PEARSON(${1:array1},${2: array2})",
        "req_param": [
            "array1",
            "array2"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PERCENTILE",
        "is_nullary": false,
        "comp_str": "PERCENTILE(${1:array},${2: k})",
        "req_param": [
            "array",
            "k"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PERCENTILE.EXC",
        "is_nullary": false,
        "comp_str": "PERCENTILE.EXC(${1:array},${2: k})",
        "req_param": [
            "array",
            "k"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PERCENTILE.INC",
        "is_nullary": false,
        "comp_str": "PERCENTILE.INC(${1:array},${2: k})",
        "req_param": [
            "array",
            "k"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PERCENTRANK",
        "is_nullary": false,
        "comp_str": "PERCENTRANK(${1:array},${2: x}${3:,${4: [significance]}})",
        "req_param": [
            "array",
            "x"
        ],
        "opt_param": [
            "significance"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PERCENTRANK.EXC",
        "is_nullary": false,
        "comp_str": "PERCENTRANK.EXC(${1:array},${2: x}${3:,${4: [significance]}})",
        "req_param": [
            "array",
            "x"
        ],
        "opt_param": [
            "significance"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PERCENTRANK.INC",
        "is_nullary": false,
        "comp_str": "PERCENTRANK.INC(${1:array},${2: x}${3:,${4: [significance]}})",
        "req_param": [
            "array",
            "x"
        ],
        "opt_param": [
            "significance"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PERMUT",
        "is_nullary": false,
        "comp_str": "PERMUT(${1:number},${2: number_chosen})",
        "req_param": [
            "number",
            "number_chosen"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PERMUTATIONA",
        "is_nullary": false,
        "comp_str": "PERMUTATIONA(${1:number},${2: number_chosen})",
        "req_param": [
            "number",
            "number_chosen"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PHI",
        "is_nullary": false,
        "comp_str": "PHI(${1:x})",
        "req_param": [
            "x"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PHONETIC",
        "is_nullary": false,
        "comp_str": "PHONETIC(${1:reference})",
        "req_param": [
            "reference"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PMT",
        "is_nullary": false,
        "comp_str": "PMT(${1:rate},${2: nper},${3: pv}${4:,${5: [fv]},${6: [type]}})",
        "req_param": [
            "rate",
            "nper",
            "pv"
        ],
        "opt_param": [
            "fv",
            "type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "POISSON",
        "is_nullary": false,
        "comp_str": "POISSON(${1:x},${2: mean},${3: cumulative})",
        "req_param": [
            "x",
            "mean",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "POISSON.DIST",
        "is_nullary": false,
        "comp_str": "POISSON.DIST(${1:x},${2: mean},${3: cumulative})",
        "req_param": [
            "x",
            "mean",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "POWER",
        "is_nullary": false,
        "comp_str": "POWER(${1:number},${2: power})",
        "req_param": [
            "number",
            "power"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PPMT",
        "is_nullary": false,
        "comp_str": "PPMT(${1:rate},${2: per},${3: nper},${4: pv}${5:,${6: [fv]},${7: [type]}})",
        "req_param": [
            "rate",
            "per",
            "nper",
            "pv"
        ],
        "opt_param": [
            "fv",
            "type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PRICE",
        "is_nullary": false,
        "comp_str": "PRICE(${1:settlement},${2: maturity},${3: rate},${4: yld},${5: redemption},${6: frequency}${7:,${8: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "rate",
            "yld",
            "redemption",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PRICEDISC",
        "is_nullary": false,
        "comp_str": "PRICEDISC(${1:settlement},${2: maturity},${3: discount},${4: redemption}${5:,${6: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "discount",
            "redemption"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PRICEMAT",
        "is_nullary": false,
        "comp_str": "PRICEMAT(${1:settlement},${2: maturity},${3: issue},${4: rate},${5: yld}${6:,${7: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "issue",
            "rate",
            "yld"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PROB",
        "is_nullary": false,
        "comp_str": "PROB(${1:x_range},${2: prob_range},${3: lower_limit}${4:,${5: [upper_limit]}})",
        "req_param": [
            "x_range",
            "prob_range",
            "lower_limit"
        ],
        "opt_param": [
            "upper_limit"
        ],
        "ellipsis": false
    },
    {
        "func_name": "PRODUCT",
        "is_nullary": false,
        "comp_str": "PRODUCT(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "PROPER",
        "is_nullary": false,
        "comp_str": "PROPER(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "PV",
        "is_nullary": false,
        "comp_str": "PV(${1:rate},${2: nper},${3: pmt}${4:,${5: [fv]},${6: [typel]}})",
        "req_param": [
            "rate",
            "nper",
            "pmt"
        ],
        "opt_param": [
            "fv",
            "typel"
        ],
        "ellipsis": false
    },
    {
        "func_name": "QUARTILE",
        "is_nullary": false,
        "comp_str": "QUARTILE(${1:array},${2: quart})",
        "req_param": [
            "array",
            "quart"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "QUARTILE.EXC",
        "is_nullary": false,
        "comp_str": "QUARTILE.EXC(${1:array},${2: quart})",
        "req_param": [
            "array",
            "quart"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "QUARTILE.INC",
        "is_nullary": false,
        "comp_str": "QUARTILE.INC(${1:array},${2: quart})",
        "req_param": [
            "array",
            "quart"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "QUOTIENT",
        "is_nullary": false,
        "comp_str": "QUOTIENT(${1:numerator},${2: denominator})",
        "req_param": [
            "numerator",
            "denominator"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RADIANS",
        "is_nullary": false,
        "comp_str": "RADIANS(${1:angle})",
        "req_param": [
            "angle"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RANDARRAY",
        "is_nullary": false,
        "comp_str": "RANDARRAY(${1:,${2: [rows]},${3: [columns]},${4: [min]},${5: [max]},${6: [integer]}})",
        "req_param": [],
        "opt_param": [
            "rows",
            "columns",
            "min",
            "max",
            "integer"
        ],
        "ellipsis": false
    },
    {
        "func_name": "RANDBETWEEN",
        "is_nullary": false,
        "comp_str": "RANDBETWEEN(${1:bottom},${2: top})",
        "req_param": [
            "bottom",
            "top"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RANK",
        "is_nullary": false,
        "comp_str": "RANK(${1:number},${2: ref}${3:,${4: [order]}})",
        "req_param": [
            "number",
            "ref"
        ],
        "opt_param": [
            "order"
        ],
        "ellipsis": false
    },
    {
        "func_name": "RANK.AVG",
        "is_nullary": false,
        "comp_str": "RANK.AVG(${1:number},${2: ref}${3:,${4: [order]}})",
        "req_param": [
            "number",
            "ref"
        ],
        "opt_param": [
            "order"
        ],
        "ellipsis": false
    },
    {
        "func_name": "RANK.EQ",
        "is_nullary": false,
        "comp_str": "RANK.EQ(${1:number},${2: ref}${3:,${4: [order]}})",
        "req_param": [
            "number",
            "ref"
        ],
        "opt_param": [
            "order"
        ],
        "ellipsis": false
    },
    {
        "func_name": "RATE",
        "is_nullary": false,
        "comp_str": "RATE(${1:nper},${2: pmt},${3: pv}${4:,${5: [fv]},${6: [type]},${7: [guess]}})",
        "req_param": [
            "nper",
            "pmt",
            "pv"
        ],
        "opt_param": [
            "fv",
            "type",
            "guess"
        ],
        "ellipsis": false
    },
    {
        "func_name": "RECEIVED",
        "is_nullary": false,
        "comp_str": "RECEIVED(${1:settlement},${2: maturity},${3: investment},${4: discount}${5:,${6: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "investment",
            "discount"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "REDUCE",
        "is_nullary": false,
        "comp_str": "REDUCE(${1:initial_value},${2: array},${3: function})",
        "req_param": [
            "initial_value",
            "array",
            "function"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "REGISTER",
        "is_nullary": false,
        "comp_str": "REGISTER(${1:module_text},${2: procedure},${3: type_text}${4:,${5: [argument1], ...}})",
        "req_param": [
            "module_text",
            "procedure",
            "type_text"
        ],
        "opt_param": [
            "argument1"
        ],
        "ellipsis": true
    },
    {
        "func_name": "REGISTER.ID",
        "is_nullary": false,
        "comp_str": "REGISTER.ID(${1:module_text},${2: procedure}${3:,${4: [type_text]}})",
        "req_param": [
            "module_text",
            "procedure"
        ],
        "opt_param": [
            "type_text"
        ],
        "ellipsis": false
    },
    {
        "func_name": "REPLACE",
        "is_nullary": false,
        "comp_str": "REPLACE(${1:old_text},${2: start_num},${3: num_chars},${4: new_text})",
        "req_param": [
            "old_text",
            "start_num",
            "num_chars",
            "new_text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "REPLACEB",
        "is_nullary": false,
        "comp_str": "REPLACEB(${1:old_text},${2: start_num},${3: num_bytes},${4: new_text})",
        "req_param": [
            "old_text",
            "start_num",
            "num_bytes",
            "new_text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "REPT",
        "is_nullary": false,
        "comp_str": "REPT(${1:text},${2: number_times})",
        "req_param": [
            "text",
            "number_times"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RIGHT",
        "is_nullary": false,
        "comp_str": "RIGHT(${1:text}${2:,${3: [num_chars]}})",
        "req_param": [
            "text"
        ],
        "opt_param": [
            "num_chars"
        ],
        "ellipsis": false
    },
    {
        "func_name": "RIGHTB",
        "is_nullary": false,
        "comp_str": "RIGHTB(${1:text}${2:,${3: [num_bytes]}})",
        "req_param": [
            "text"
        ],
        "opt_param": [
            "num_bytes"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ROMAN",
        "is_nullary": false,
        "comp_str": "ROMAN(${1:number}${2:,${3: [form]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "form"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ROUND",
        "is_nullary": false,
        "comp_str": "ROUND(${1:number},${2: num_digits})",
        "req_param": [
            "number",
            "num_digits"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ROUNDDOWN",
        "is_nullary": false,
        "comp_str": "ROUNDDOWN(${1:number},${2: num_digits})",
        "req_param": [
            "number",
            "num_digits"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ROUNDUP",
        "is_nullary": false,
        "comp_str": "ROUNDUP(${1:number},${2: num_digits})",
        "req_param": [
            "number",
            "num_digits"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "ROW",
        "is_nullary": false,
        "comp_str": "ROW(${1:,${2: [reference]}})",
        "req_param": [],
        "opt_param": [
            "reference"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ROWS",
        "is_nullary": false,
        "comp_str": "ROWS(${1:array})",
        "req_param": [
            "array"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RRI",
        "is_nullary": false,
        "comp_str": "RRI(${1:nper},${2: pv},${3: fv})",
        "req_param": [
            "nper",
            "pv",
            "fv"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RSQ",
        "is_nullary": false,
        "comp_str": "RSQ(${1:known_ys},${2: known_xs})",
        "req_param": [
            "known_ys",
            "known_xs"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "RTD",
        "is_nullary": false,
        "comp_str": "RTD(${1:progID},${2: server},${3: topic1}${4:,${5: [topic2], ...}})",
        "req_param": [
            "progID",
            "server",
            "topic1"
        ],
        "opt_param": [
            "topic2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SCAN",
        "is_nullary": false,
        "comp_str": "SCAN(${1:initial_value},${2: array},${3: function})",
        "req_param": [
            "initial_value",
            "array",
            "function"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SEARCH",
        "is_nullary": false,
        "comp_str": "SEARCH(${1:find_text},${2: within_text}${3:,${4: [start_num]}})",
        "req_param": [
            "find_text",
            "within_text"
        ],
        "opt_param": [
            "start_num"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SEARCHB",
        "is_nullary": false,
        "comp_str": "SEARCHB(${1:find_text},${2: within_text}${3:,${4: [start_num]}})",
        "req_param": [
            "find_text",
            "within_text"
        ],
        "opt_param": [
            "start_num"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SEC",
        "is_nullary": false,
        "comp_str": "SEC(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SECH",
        "is_nullary": false,
        "comp_str": "SECH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SECOND",
        "is_nullary": false,
        "comp_str": "SECOND(${1:serial_number})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SEQUENCE",
        "is_nullary": false,
        "comp_str": "SEQUENCE(${1:rows}${2:,${3: [columns]},${4: [start]},${5: [step]}})",
        "req_param": [
            "rows"
        ],
        "opt_param": [
            "columns",
            "start",
            "step"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SERIESSUM",
        "is_nullary": false,
        "comp_str": "SERIESSUM(${1:x},${2: n},${3: m},${4: coefficients})",
        "req_param": [
            "x",
            "n",
            "m",
            "coefficients"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SHEET",
        "is_nullary": false,
        "comp_str": "SHEET(${1:,${2: [value]}})",
        "req_param": [],
        "opt_param": [
            "value"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SHEETS",
        "is_nullary": false,
        "comp_str": "SHEETS(${1:,${2: [reference]}})",
        "req_param": [],
        "opt_param": [
            "reference"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SIGN",
        "is_nullary": false,
        "comp_str": "SIGN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SIN",
        "is_nullary": false,
        "comp_str": "SIN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SINH",
        "is_nullary": false,
        "comp_str": "SINH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SKEW",
        "is_nullary": false,
        "comp_str": "SKEW(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SKEW.P",
        "is_nullary": false,
        "comp_str": "SKEW.P(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SLN",
        "is_nullary": false,
        "comp_str": "SLN(${1:cost},${2: salvage},${3: life})",
        "req_param": [
            "cost",
            "salvage",
            "life"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SLOPE",
        "is_nullary": false,
        "comp_str": "SLOPE(${1:known_ys},${2: known_xs})",
        "req_param": [
            "known_ys",
            "known_xs"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SMALL",
        "is_nullary": false,
        "comp_str": "SMALL(${1:array},${2: k})",
        "req_param": [
            "array",
            "k"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SORT",
        "is_nullary": false,
        "comp_str": "SORT(${1:array}${2:,${3: [sort_index]},${4: [sort_order]},${5: [by_col]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "sort_index",
            "sort_order",
            "by_col"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SORTBY",
        "is_nullary": false,
        "comp_str": "SORTBY(${1:array},${2: by_array1}${3:,${4: [sort_order1], ...}})",
        "req_param": [
            "array",
            "by_array1"
        ],
        "opt_param": [
            "sort_order1"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SQRT",
        "is_nullary": false,
        "comp_str": "SQRT(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SQRTPI",
        "is_nullary": false,
        "comp_str": "SQRTPI(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "STANDARDIZE",
        "is_nullary": false,
        "comp_str": "STANDARDIZE(${1:x},${2: mean},${3: standard_dev})",
        "req_param": [
            "x",
            "mean",
            "standard_dev"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "STDEV",
        "is_nullary": false,
        "comp_str": "STDEV(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "STDEV.P",
        "is_nullary": false,
        "comp_str": "STDEV.P(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "STDEV.S",
        "is_nullary": false,
        "comp_str": "STDEV.S(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "STDEVA",
        "is_nullary": false,
        "comp_str": "STDEVA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "STDEVP",
        "is_nullary": false,
        "comp_str": "STDEVP(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "STDEVPA",
        "is_nullary": false,
        "comp_str": "STDEVPA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "STEYX",
        "is_nullary": false,
        "comp_str": "STEYX(${1:known_ys},${2: known_xs})",
        "req_param": [
            "known_ys",
            "known_xs"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "STOCKHISTORY",
        "is_nullary": false,
        "comp_str": "STOCKHISTORY(${1:stock},${2: start_date}${3:,${4: [end_date]},${5: [interval]},${6: [headers]},${7: [properties], ...}})",
        "req_param": [
            "stock",
            "start_date"
        ],
        "opt_param": [
            "end_date",
            "interval",
            "headers",
            "properties"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SUBSTITUTE",
        "is_nullary": false,
        "comp_str": "SUBSTITUTE(${1:text},${2: old_text},${3: new_text}${4:,${5: [instance_num]}})",
        "req_param": [
            "text",
            "old_text",
            "new_text"
        ],
        "opt_param": [
            "instance_num"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SUBTOTAL",
        "is_nullary": false,
        "comp_str": "SUBTOTAL(${1:function_num},${2: ref1}${3:,${4: [ref2], ...}})",
        "req_param": [
            "function_num",
            "ref1"
        ],
        "opt_param": [
            "ref2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SUM",
        "is_nullary": false,
        "comp_str": "SUM(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SUMIF",
        "is_nullary": false,
        "comp_str": "SUMIF(${1:range},${2: criteria}${3:,${4: [sum_range]}})",
        "req_param": [
            "range",
            "criteria"
        ],
        "opt_param": [
            "sum_range"
        ],
        "ellipsis": false
    },
    {
        "func_name": "SUMIFS",
        "is_nullary": false,
        "comp_str": "SUMIFS(${1:sum_range},${2: criteria_range1},${3: criteria1}${4:,${5: [criteria_range2]},${6: [criteria2], ...}})",
        "req_param": [
            "sum_range",
            "criteria_range1",
            "criteria1"
        ],
        "opt_param": [
            "criteria_range2",
            "criteria2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SUMPRODUCT",
        "is_nullary": false,
        "comp_str": "SUMPRODUCT(${1:array1}${2:,${3: [array2]},${4: [array3], ...}})",
        "req_param": [
            "array1"
        ],
        "opt_param": [
            "array2",
            "array3"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SUMSQ",
        "is_nullary": false,
        "comp_str": "SUMSQ(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SUMX2MY2",
        "is_nullary": false,
        "comp_str": "SUMX2MY2(${1:array_x},${2: array_y})",
        "req_param": [
            "array_x",
            "array_y"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SUMX2PY2",
        "is_nullary": false,
        "comp_str": "SUMX2PY2(${1:array_x},${2: array_y})",
        "req_param": [
            "array_x",
            "array_y"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SUMXMY2",
        "is_nullary": false,
        "comp_str": "SUMXMY2(${1:array_x},${2: array_y})",
        "req_param": [
            "array_x",
            "array_y"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "SWITCH",
        "is_nullary": false,
        "comp_str": "SWITCH(${1:expression},${2: value1},${3: result1}${4:,${5: [default_or_value2]},${6: [result2], ...}})",
        "req_param": [
            "expression",
            "value1",
            "result1"
        ],
        "opt_param": [
            "default_or_value2",
            "result2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "SYD",
        "is_nullary": false,
        "comp_str": "SYD(${1:cost},${2: salvage},${3: life},${4: per})",
        "req_param": [
            "cost",
            "salvage",
            "life",
            "per"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T",
        "is_nullary": false,
        "comp_str": "T(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T.DIST",
        "is_nullary": false,
        "comp_str": "T.DIST(${1:x},${2: deg_freedom},${3: cumulative})",
        "req_param": [
            "x",
            "deg_freedom",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T.DIST.2T",
        "is_nullary": false,
        "comp_str": "T.DIST.2T(${1:x},${2: deg_freedom})",
        "req_param": [
            "x",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T.DIST.RT",
        "is_nullary": false,
        "comp_str": "T.DIST.RT(${1:x},${2: deg_freedom})",
        "req_param": [
            "x",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T.INV",
        "is_nullary": false,
        "comp_str": "T.INV(${1:probability},${2: deg_freedom})",
        "req_param": [
            "probability",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T.INV.2T",
        "is_nullary": false,
        "comp_str": "T.INV.2T(${1:probability},${2: deg_freedom})",
        "req_param": [
            "probability",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "T.TEST",
        "is_nullary": false,
        "comp_str": "T.TEST(${1:array1},${2: array2},${3: tails},${4: type})",
        "req_param": [
            "array1",
            "array2",
            "tails",
            "type"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TAKE",
        "is_nullary": false,
        "comp_str": "TAKE(${1:array},${2: rows}${3:,${4: [columns]}})",
        "req_param": [
            "array",
            "rows"
        ],
        "opt_param": [
            "columns"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TAN",
        "is_nullary": false,
        "comp_str": "TAN(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TANH",
        "is_nullary": false,
        "comp_str": "TANH(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TBILLEQ",
        "is_nullary": false,
        "comp_str": "TBILLEQ(${1:settlement},${2: maturity},${3: discount})",
        "req_param": [
            "settlement",
            "maturity",
            "discount"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TBILLPRICE",
        "is_nullary": false,
        "comp_str": "TBILLPRICE(${1:settlement},${2: maturity},${3: discount})",
        "req_param": [
            "settlement",
            "maturity",
            "discount"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TBILLYIELD",
        "is_nullary": false,
        "comp_str": "TBILLYIELD(${1:settlement},${2: maturity},${3: pr})",
        "req_param": [
            "settlement",
            "maturity",
            "pr"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TDIST",
        "is_nullary": false,
        "comp_str": "TDIST(${1:x},${2: deg_freedom},${3: tails})",
        "req_param": [
            "x",
            "deg_freedom",
            "tails"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TEXT",
        "is_nullary": false,
        "comp_str": "TEXT(${1:value},${2: format_text})",
        "req_param": [
            "value",
            "format_text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TEXTAFTER",
        "is_nullary": false,
        "comp_str": "TEXTAFTER(${1:text},${2: delimiter}${3:,${4: [instance_num]},${5: [match_mode]},${6: [match_end]},${7: [if_not_found]}})",
        "req_param": [
            "text",
            "delimiter"
        ],
        "opt_param": [
            "instance_num",
            "match_mode",
            "match_end",
            "if_not_found"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TEXTBEFORE",
        "is_nullary": false,
        "comp_str": "TEXTBEFORE(${1:text},${2: delimiter}${3:,${4: [instance_num]},${5: [match_mode]},${6: [match_end]},${7: [if_not_found]}})",
        "req_param": [
            "text",
            "delimiter"
        ],
        "opt_param": [
            "instance_num",
            "match_mode",
            "match_end",
            "if_not_found"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TEXTJOIN",
        "is_nullary": false,
        "comp_str": "TEXTJOIN(${1:delimiter},${2: ignore_empty},${3: text1}${4:,${5: [text2], ...}})",
        "req_param": [
            "delimiter",
            "ignore_empty",
            "text1"
        ],
        "opt_param": [
            "text2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "TEXTSPLIT",
        "is_nullary": false,
        "comp_str": "TEXTSPLIT(${1:text},${2: col_delimiter}${3:,${4: [row_delimiter]},${5: [ignore_empty]},${6: [match_mode]},${7: [pad_with]}})",
        "req_param": [
            "text",
            "col_delimiter"
        ],
        "opt_param": [
            "row_delimiter",
            "ignore_empty",
            "match_mode",
            "pad_with"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TIME",
        "is_nullary": false,
        "comp_str": "TIME(${1:hour},${2: minute},${3: second})",
        "req_param": [
            "hour",
            "minute",
            "second"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TIMEVALUE",
        "is_nullary": false,
        "comp_str": "TIMEVALUE(${1:time_text})",
        "req_param": [
            "time_text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TINV",
        "is_nullary": false,
        "comp_str": "TINV(${1:probability},${2: deg_freedom})",
        "req_param": [
            "probability",
            "deg_freedom"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TOCOL",
        "is_nullary": false,
        "comp_str": "TOCOL(${1:array}${2:,${3: [ignore]},${4: [scan_by_column]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "ignore",
            "scan_by_column"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TOROW",
        "is_nullary": false,
        "comp_str": "TOROW(${1:array}${2:,${3: [ignore]},${4: [scan_by_column]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "ignore",
            "scan_by_column"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TRANSPOSE",
        "is_nullary": false,
        "comp_str": "TRANSPOSE(${1:array})",
        "req_param": [
            "array"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TREND",
        "is_nullary": false,
        "comp_str": "TREND(${1:known_ys}${2:,${3: [known_xs]},${4: [new_xs]},${5: [const]}})",
        "req_param": [
            "known_ys"
        ],
        "opt_param": [
            "known_xs",
            "new_xs",
            "const"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TRIM",
        "is_nullary": false,
        "comp_str": "TRIM(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TRIMMEAN",
        "is_nullary": false,
        "comp_str": "TRIMMEAN(${1:array},${2: percent})",
        "req_param": [
            "array",
            "percent"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TRUNC",
        "is_nullary": false,
        "comp_str": "TRUNC(${1:number}${2:,${3: [num_digits]}})",
        "req_param": [
            "number"
        ],
        "opt_param": [
            "num_digits"
        ],
        "ellipsis": false
    },
    {
        "func_name": "TTEST",
        "is_nullary": false,
        "comp_str": "TTEST(${1:array1},${2: array2},${3: tails},${4: type})",
        "req_param": [
            "array1",
            "array2",
            "tails",
            "type"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "TYPE",
        "is_nullary": false,
        "comp_str": "TYPE(${1:value})",
        "req_param": [
            "value"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "UNICHAR",
        "is_nullary": false,
        "comp_str": "UNICHAR(${1:number})",
        "req_param": [
            "number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "UNICODE",
        "is_nullary": false,
        "comp_str": "UNICODE(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "UNIQUE",
        "is_nullary": false,
        "comp_str": "UNIQUE(${1:array}${2:,${3: [by_col]},${4: [exactly_once]}})",
        "req_param": [
            "array"
        ],
        "opt_param": [
            "by_col",
            "exactly_once"
        ],
        "ellipsis": false
    },
    {
        "func_name": "UNREGISTER",
        "is_nullary": false,
        "comp_str": "UNREGISTER(${1:register_id})",
        "req_param": [
            "register_id"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "UPPER",
        "is_nullary": false,
        "comp_str": "UPPER(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "VALUE",
        "is_nullary": false,
        "comp_str": "VALUE(${1:text})",
        "req_param": [
            "text"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "VALUETOTEXT",
        "is_nullary": false,
        "comp_str": "VALUETOTEXT(${1:value}${2:,${3: [format]}})",
        "req_param": [
            "value"
        ],
        "opt_param": [
            "format"
        ],
        "ellipsis": false
    },
    {
        "func_name": "VAR",
        "is_nullary": false,
        "comp_str": "VAR(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "VAR.P",
        "is_nullary": false,
        "comp_str": "VAR.P(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "VAR.S",
        "is_nullary": false,
        "comp_str": "VAR.S(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "VARA",
        "is_nullary": false,
        "comp_str": "VARA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "VARP",
        "is_nullary": false,
        "comp_str": "VARP(${1:number1}${2:,${3: [number2], ...}})",
        "req_param": [
            "number1"
        ],
        "opt_param": [
            "number2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "VARPA",
        "is_nullary": false,
        "comp_str": "VARPA(${1:value1}${2:,${3: [value2], ...}})",
        "req_param": [
            "value1"
        ],
        "opt_param": [
            "value2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "VDB",
        "is_nullary": false,
        "comp_str": "VDB(${1:cost},${2: salvage},${3: life},${4: start_period},${5: end_period}${6:,${7: [factor]},${8: [no_switch]}})",
        "req_param": [
            "cost",
            "salvage",
            "life",
            "start_period",
            "end_period"
        ],
        "opt_param": [
            "factor",
            "no_switch"
        ],
        "ellipsis": false
    },
    {
        "func_name": "VLOOKUP",
        "is_nullary": false,
        "comp_str": "VLOOKUP(${1:lookup_value},${2: table_array},${3: col_index_num}${4:,${5: [range_lookup]}})",
        "req_param": [
            "lookup_value",
            "table_array",
            "col_index_num"
        ],
        "opt_param": [
            "range_lookup"
        ],
        "ellipsis": false
    },
    {
        "func_name": "VSTACK",
        "is_nullary": false,
        "comp_str": "VSTACK(${1:array1}${2:,${3: [array2], ...}})",
        "req_param": [
            "array1"
        ],
        "opt_param": [
            "array2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "WEBSERVICE",
        "is_nullary": false,
        "comp_str": "WEBSERVICE(${1:url})",
        "req_param": [
            "url"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "WEEKDAY",
        "is_nullary": false,
        "comp_str": "WEEKDAY(${1:serial_number}${2:,${3: [return_type]}})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [
            "return_type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "WEEKNUM",
        "is_nullary": false,
        "comp_str": "WEEKNUM(${1:serial_number}${2:,${3: [return_type]}})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [
            "return_type"
        ],
        "ellipsis": false
    },
    {
        "func_name": "WEIBULL",
        "is_nullary": false,
        "comp_str": "WEIBULL(${1:x},${2: alpha},${3: beta},${4: cumulative})",
        "req_param": [
            "x",
            "alpha",
            "beta",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "WEIBULL.DIST",
        "is_nullary": false,
        "comp_str": "WEIBULL.DIST(${1:x},${2: alpha},${3: beta},${4: cumulative})",
        "req_param": [
            "x",
            "alpha",
            "beta",
            "cumulative"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "WORKDAY",
        "is_nullary": false,
        "comp_str": "WORKDAY(${1:start_date},${2: days}${3:,${4: [holidays]}})",
        "req_param": [
            "start_date",
            "days"
        ],
        "opt_param": [
            "holidays"
        ],
        "ellipsis": false
    },
    {
        "func_name": "WORKDAY.INTL",
        "is_nullary": false,
        "comp_str": "WORKDAY.INTL(${1:start_date},${2: days}${3:,${4: [weekend]},${5: [holidays]}})",
        "req_param": [
            "start_date",
            "days"
        ],
        "opt_param": [
            "weekend",
            "holidays"
        ],
        "ellipsis": false
    },
    {
        "func_name": "WRAPCOLS",
        "is_nullary": false,
        "comp_str": "WRAPCOLS(${1:vector},${2: wrap_count}${3:,${4: [pad_with]}})",
        "req_param": [
            "vector",
            "wrap_count"
        ],
        "opt_param": [
            "pad_with"
        ],
        "ellipsis": false
    },
    {
        "func_name": "WRAPROWS",
        "is_nullary": false,
        "comp_str": "WRAPROWS(${1:vector},${2: wrap_count}${3:,${4: [pad_with]}})",
        "req_param": [
            "vector",
            "wrap_count"
        ],
        "opt_param": [
            "pad_with"
        ],
        "ellipsis": false
    },
    {
        "func_name": "XIRR",
        "is_nullary": false,
        "comp_str": "XIRR(${1:values},${2: dates}${3:,${4: [guess]}})",
        "req_param": [
            "values",
            "dates"
        ],
        "opt_param": [
            "guess"
        ],
        "ellipsis": false
    },
    {
        "func_name": "XLOOKUP",
        "is_nullary": false,
        "comp_str": "XLOOKUP(${1:lookup_value},${2: lookup_array},${3: return_array}${4:,${5: [if_not_found]},${6: [match_mode]},${7: [search_mode]}})",
        "req_param": [
            "lookup_value",
            "lookup_array",
            "return_array"
        ],
        "opt_param": [
            "if_not_found",
            "match_mode",
            "search_mode"
        ],
        "ellipsis": false
    },
    {
        "func_name": "XMATCH",
        "is_nullary": false,
        "comp_str": "XMATCH(${1:lookup_value},${2: lookup_array}${3:,${4: [match_mode]},${5: [search_mode]}})",
        "req_param": [
            "lookup_value",
            "lookup_array"
        ],
        "opt_param": [
            "match_mode",
            "search_mode"
        ],
        "ellipsis": false
    },
    {
        "func_name": "XNPV",
        "is_nullary": false,
        "comp_str": "XNPV(${1:rate},${2: values},${3: dates})",
        "req_param": [
            "rate",
            "values",
            "dates"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "XOR",
        "is_nullary": false,
        "comp_str": "XOR(${1:logical1}${2:,${3: [logical2], ...}})",
        "req_param": [
            "logical1"
        ],
        "opt_param": [
            "logical2"
        ],
        "ellipsis": true
    },
    {
        "func_name": "YEAR",
        "is_nullary": false,
        "comp_str": "YEAR(${1:serial_number})",
        "req_param": [
            "serial_number"
        ],
        "opt_param": [],
        "ellipsis": false
    },
    {
        "func_name": "YEARFRAC",
        "is_nullary": false,
        "comp_str": "YEARFRAC(${1:start_date},${2: end_date}${3:,${4: [basis]}})",
        "req_param": [
            "start_date",
            "end_date"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "YIELD",
        "is_nullary": false,
        "comp_str": "YIELD(${1:settlement},${2: maturity},${3: rate},${4: pr},${5: redemption},${6: frequency}${7:,${8: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "rate",
            "pr",
            "redemption",
            "frequency"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "YIELDDISC",
        "is_nullary": false,
        "comp_str": "YIELDDISC(${1:settlement},${2: maturity},${3: pr},${4: redemption}${5:,${6: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "pr",
            "redemption"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "YIELDMAT",
        "is_nullary": false,
        "comp_str": "YIELDMAT(${1:settlement},${2: maturity},${3: issue},${4: rate},${5: pr}${6:,${7: [basis]}})",
        "req_param": [
            "settlement",
            "maturity",
            "issue",
            "rate",
            "pr"
        ],
        "opt_param": [
            "basis"
        ],
        "ellipsis": false
    },
    {
        "func_name": "Z.TEST",
        "is_nullary": false,
        "comp_str": "Z.TEST(${1:array},${2: x}${3:,${4: [sigma]}})",
        "req_param": [
            "array",
            "x"
        ],
        "opt_param": [
            "sigma"
        ],
        "ellipsis": false
    },
    {
        "func_name": "ZTEST",
        "is_nullary": false,
        "comp_str": "ZTEST(${1:array},${2: x}${3:,${4: [sigma]}})",
        "req_param": [
            "array",
            "x"
        ],
        "opt_param": [
            "sigma"
        ],
        "ellipsis": false
    }
]