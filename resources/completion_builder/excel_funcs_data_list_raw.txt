ABS~ABS(number)
ACCRINT~ACCRINT(issue, first_interest, settlement, rate, par, frequency, [basis], [calc_method])
ACCRINTM~ACCRINTM(issue, settlement, rate, par, [basis])
ACOS~ACOS(number)
ACOSH~ACOSH(number)
ACOT~ACOT(number)
ACOTH~ACOTH(number)
ADDRESS~ADDRESS(row_num, column_num, [abs_num], [a1], [sheet_text])
AGGREGATE~AGGREGATE(function_num, options, array, [k])
AMORDEGRC~AMORDEGRC(cost, date_purchased, first_period, salvage, period, rate, [basis])
AMORLINC~AMORLINC(cost, date_purchased, first_period, salvage, period, rate, [basis])
AND~AND(logical1, [logical2], ...)
ARABIC~ARABIC(text)
AREAS~AREAS(reference)
ARRAYTOTEXT~ARRAYTOTEXT(array, [format])
ASC~ASC(text)
ASIN~ASIN(number)
ASINH~ASINH(number)
ATAN~ATAN(number)
ATAN2~ATAN2(x_num, y_num)
ATANH~ATANH(number)
AVEDEV~AVEDEV(number1, [number2], ...)
AVERAGE~AVERAGE(number1, [number2], ...)
AVERAGEA~AVERAGEA(value1, [value2], ...)
AVERAGEIF~AVERAGEIF(range, criteria, [average_range])
AVERAGEIFS~AVERAGEIFS(average_range, criteria_range1, criteria1, ...)
BAHTTEXT~BAHTTEXT(number)
BASE~BASE(number, radix, [min_length])
BESSELI~BESSELI(x, n)
BESSELJ~BESSELJ(x, n)
BESSELK~BESSELK(x, n)
BESSELY~BESSELY(x, n)
BETA.DIST~BETA.DIST(x, alpha, beta, cumulative, [A], [B])
BETA.INV~BETA.INV(probability, alpha, beta, [A], [B])
BETADIST~BETADIST(x, alpha, beta, [A], [B])
BETAINV~BETAINV(probability, alpha, beta, [A], [B])
BIN2DEC~BIN2DEC(number)
BIN2HEX~BIN2HEX(number, [places])
BIN2OCT~BIN2OCT(number, [places])
BINOM.DIST~BINOM.DIST(number_s, trials, probability_s, cumulative)
BINOM.DIST.RANGE~BINOM.DIST.RANGE(trials, probability_s, number_s, [number_s2])
BINOM.INV~BINOM.INV(trials, probability_s, alpha)
BINOMDIST~BINOMDIST(number_s, trials, probability_s, cumulative)
BITAND~BITAND(number1, number2)
BITLSHIFT~BITLSHIFT(number, shift_amount)
BITOR~BITOR(number1, number2)
BITRSHIFT~BITRSHIFT(number, shift_amount)
BITXOR~BITXOR(number1, number2)
BYCOL~BYCOL(array, [function])
BYROW~BYROW(array, [function])
CALL~CALL(register_id, [argument1], ...)
CEILING~CEILING(number, significance)
CEILING.MATH~CEILING.MATH(number, [significance], [mode])
CEILING.PRECISE~CEILING.PRECISE(number, [significance])
CELL~CELL(info_type, [reference])
CHAR~CHAR(number)
CHIDIST~CHIDIST(x, deg_freedom)
CHIINV~CHIINV(probability, deg_freedom)
CHISQ.DIST~CHISQ.DIST(x, deg_freedom, cumulative)
CHISQ.DIST.RT~CHISQ.DIST.RT(x, deg_freedom)
CHISQ.INV~CHISQ.INV(probability, deg_freedom)
CHISQ.INV.RT~CHISQ.INV.RT(probability, deg_freedom)
CHISQ.TEST~CHISQ.TEST(actual_range, expected_range)
CHITEST~CHITEST(actual_range, expected_range)
CHOOSE~CHOOSE(index_num, value1, [value2], ...)
CHOOSECOLS~CHOOSECOLS(array, col_num1, [col_num2], ...)
CHOOSEROWS~CHOOSEROWS(array, row_num1, [row_num2], ...)
CLEAN~CLEAN(text)
CODE~CODE(text)
COLUMN~COLUMN([reference])
COLUMNS~COLUMNS(array)
COMBIN~COMBIN(number, number_chosen)
COMBINA~COMBINA(number, number_chosen)
COMPLEX~COMPLEX(real_num, i_num, [suffix])
CONCAT~CONCAT(text, ...)
CONCATENATE~CONCATENATE(text1, [text2], ...)
CONFIDENCE~CONFIDENCE(alpha, standard_dev, size)
CONFIDENCE.NORM~CONFIDENCE.NORM(alpha, standard_dev, size)
CONFIDENCE.T~CONFIDENCE.T(alpha, standard_dev, size)
CONVERT~CONVERT(number, from_unit, to_unit)
CORREL~CORREL(array1, array2)
COS~COS(number)
COSH~COSH(number)
COT~COT(number)
COTH~COTH(number)
COUNT~COUNT(value1, [value2], ...)
COUNTA~COUNTA(value1, [value2], ...)
COUNTBLANK~COUNTBLANK(range)
COUNTIF~COUNTIF(range, criteria)
COUNTIFS~COUNTIFS(criteria_range1, criteria1, ...)
COUPDAYBS~COUPDAYBS(settlement, maturity, frequency, [basis])
COUPDAYS~COUPDAYS(settlement, maturity, frequency, [basis])
COUPDAYSNC~COUPDAYSNC(settlement, maturity, frequency, [basis])
COUPNCD~COUPNCD(settlement, maturity, frequency, [basis])
COUPNUM~COUPNUM(settlement, maturity, frequency, [basis])
COUPPCD~COUPPCD(settlement, maturity, frequency, [basis])
COVAR~COVAR(array1, array2)
COVARIANCE.P~COVARIANCE.P(array1, array2)
COVARIANCE.S~COVARIANCE.S(array1, array2)
CRITBINOM~CRITBINOM(trials, probability_s, alpha)
CSC~CSC(number)
CSCH~CSCH(number)
CUBEKPIMEMBER~CUBEKPIMEMBER(connection, kpi_name, kpi_property, [caption])
CUBEMEMBER~CUBEMEMBER(connection, member_expression, [caption])
CUBEMEMBERPROPERTY~CUBEMEMBERPROPERTY(connection, member_expression, property)
CUBERANKEDMEMBER~CUBERANKEDMEMBER(connection, set_expression, rank, [caption])
CUBESET~CUBESET(connection, set_expression, [caption], [sort_order], [sort_by])
CUBESETCOUNT~CUBESETCOUNT(set)
CUBEVALUE~CUBEVALUE(connection, [member_expression1], ...)
CUMIPMT~CUMIPMT(rate, nper, pv, start_period, end_period, type)
CUMPRINC~CUMPRINC(rate, nper, pv, start_period, end_period, type)
DATE~DATE(year, month, day)
DATEDIF~DATEDIF(start_date, end_date, unit)
DATEVALUE~DATEVALUE(date_text)
DAVERAGE~DAVERAGE(database, field, criteria)
DAY~DAY(serial_number)
DAYS~DAYS(end_date, start_date)
DAYS360~DAYS360(start_date, end_date, [method])
DB~DB(cost, salvage, life, period, [month])
DBCS~DBCS(text)
DCOUNT~DCOUNT(database, field, criteria)
DCOUNTA~DCOUNTA(database, field, criteria)
DDB~DDB(cost, salvage, life, period, [factor])
DEC2BIN~DEC2BIN(number, [places])
DEC2HEX~DEC2HEX(number, [places])
DEC2OCT~DEC2OCT(number, [places])
DECIMAL~DECIMAL(number, radix)
DEGREES~DEGREES(angle)
DELTA~DELTA(number1, [number2])
DEVSQ~DEVSQ(number1, [number2], ...)
DGET~DGET(database, field, criteria)
DISC~DISC(settlement, maturity, pr, redemption, [basis])
DMAX~DMAX(database, field, criteria)
DMIN~DMIN(database, field, criteria)
DOLLAR~DOLLAR(number, [decimals])
DOLLARDE~DOLLARDE(fractional_dollar, fraction)
DOLLARFR~DOLLARFR(decimal_dollar, fraction)
DPRODUCT~DPRODUCT(database, field, criteria)
DROP~DROP(array, rows, [columns])
DSTDEV~DSTDEV(database, field, criteria)
DSTDEVP~DSTDEVP(database, field, criteria)
DSUM~DSUM(database, field, criteria)
DURATION~DURATION(settlement, maturity, coupon, yld, frequency, [basis])
DVAR~DVAR(database, field, criteria)
DVARP~DVARP(database, field, criteria)
EDATE~EDATE(start_date, months)
EFFECT~EFFECT(nominal_rate, npery)
ENCODEURL~ENCODEURL(text)
EOMONTH~EOMONTH(start_date, months)
ERF~ERF(lower_limit, [upper_limit])
ERF.PRECISE~ERF.PRECISE(x)
ERFC~ERFC(x)
ERFC.PRECISE~ERFC.PRECISE(x)
ERROR.TYPE~ERROR.TYPE(error_val)
EUROCONVERT~EUROCONVERT(number, source, target, full_precision, triangulation_precision)
EVEN~EVEN(number)
EXACT~EXACT(text1, text2)
EXP~EXP(number)
EXPAND~EXPAND(array, rows, [columns], [pad_with])
EXPON.DIST~EXPON.DIST(x, lambda, cumulative)
EXPONDIST~EXPONDIST(x, lambda, cumulative)
F.DIST~F.DIST(x, deg_freedom1, deg_freedom2, cumulative)
F.DIST.RT~F.DIST.RT(x, deg_freedom1, deg_freedom2)
F.INV~F.INV(probability, deg_freedom1, deg_freedom2)
F.INV.RT~F.INV.RT(probability, deg_freedom1, deg_freedom2)
F.TEST~F.TEST(array1, array2)
FACT~FACT(number)
FACTDOUBLE~FACTDOUBLE(number)
FDIST~FDIST(x, deg_freedom1, deg_freedom2)
FILTER~FILTER(array, include, [if_empty])
FILTERXML~FILTERXML(xml, xpath)
FIND~FIND(find_text, within_text, [start_num])
FINDB~FINDB(find_text, within_text, [start_num])
FINV~FINV(probability, deg_freedom1, deg_freedom2)
FISHER~FISHER(x)
FISHERINV~FISHERINV(y)
FIXED~FIXED(number, [decimals], [no_commas])
FLOOR~FLOOR(number, significance)
FLOOR.MATH~FLOOR.MATH(number, [significance], [mode])
FLOOR.PRECISE~FLOOR.PRECISE(number, [significance])
FORECAST~FORECAST(x, known_ys, known_xs)
FORECAST.ETS~FORECAST.ETS(target_date, values, timeline, [seasonality], [data_completion], [aggregation])
FORECAST.ETS.CONFINT~FORECAST.ETS.CONFINT(target_date, values, timeline, [confidence_level], [seasonality], [data_completion], [aggregation])
FORECAST.ETS.SEASONALITY~FORECAST.ETS.SEASONALITY(values, timeline, [data_completion], [aggregation])
FORECAST.ETS.STAT~FORECAST.ETS.STAT(values, timeline, statistic_type, [seasonality], [data_completion], [aggregation])
FORECAST.LINEAR~FORECAST.LINEAR(x, known_ys, known_xs)
FORMULATEXT~FORMULATEXT(reference)
FREQUENCY~FREQUENCY(data_array, bins_array)
FTEST~FTEST(array1, array2)
FV~FV(rate, nper, pmt, [pv], [type])
FVSCHEDULE~FVSCHEDULE(principal, schedule)
GAMMA~GAMMA(x)
GAMMA.DIST~GAMMA.DIST(x, alpha, beta, cumulative)
GAMMA.INV~GAMMA.INV(probability, alpha, beta)
GAMMADIST~GAMMADIST(x, alpha, beta, cumulative)
GAMMAINV~GAMMAINV(probability, alpha, beta)
GAMMALN~GAMMALN(x)
GAMMALN.PRECISE~GAMMALN.PRECISE(x)
GAUSS~GAUSS(x)
GCD~GCD(number1, [number2], ...)
GEOMEAN~GEOMEAN(number1, [number2], ...)
GESTEP~GESTEP(number, [step])
GETPIVOTDATA~GETPIVOTDATA(data_field, pivot_table, [field1], [item1], ...)
GROWTH~GROWTH(known_ys, [known_xs], [new_xs], [const])
HARMEAN~HARMEAN(number1, [number2], ...)
HEX2BIN~HEX2BIN(number, [places])
HEX2DEC~HEX2DEC(number)
HEX2OCT~HEX2OCT(number, [places])
HLOOKUP~HLOOKUP(lookup_value, table_array, row_index_num, [range_lookup])
HOUR~HOUR(serial_number)
HSTACK~HSTACK(array1, [array2], ...)
HYPERLINK~HYPERLINK(link_location, [friendly_name])
HYPGEOM.DIST~HYPGEOM.DIST(sample_s, number_sample, population_s, number_pop, cumulative)
HYPGEOMDIST~HYPGEOMDIST(sample_s, number_sample, population_s, number_pop)
IF~IF(logical_test, [value_if_true], [value_if_false])
IFERROR~IFERROR(value, value_if_error)
IFNA~IFNA(value, value_if_na)
IFS~IFS(logical_test1, value_if_true1, ...)
IMABS~IMABS(inumber)
IMAGE~IMAGE(source, [alt_text], [sizing], [height], [width])
IMAGINARY~IMAGINARY(inumber)
IMARGUMENT~IMARGUMENT(inumber)
IMCONJUGATE~IMCONJUGATE(inumber)
IMCOS~IMCOS(inumber)
IMCOSH~IMCOSH(inumber)
IMCOT~IMCOT(inumber)
IMCSC~IMCSC(inumber)
IMCSCH~IMCSCH(inumber)
IMDIV~IMDIV(inumber1, inumber2)
IMEXP~IMEXP(inumber)
IMLN~IMLN(inumber)
IMLOG10~IMLOG10(inumber)
IMLOG2~IMLOG2(inumber)
IMPOWER~IMPOWER(inumber, number)
IMPRODUCT~IMPRODUCT(inumber1, [inumber2], ...)
IMREAL~IMREAL(inumber)
IMSEC~IMSEC(inumber)
IMSECH~IMSECH(inumber)
IMSIN~IMSIN(inumber)
IMSINH~IMSINH(inumber)
IMSQRT~IMSQRT(inumber)
IMSUB~IMSUB(inumber1, inumber2)
IMSUM~IMSUM(inumber1, [inumber2], ...)
IMTAN~IMTAN(inumber)
INDEX~INDEX(array, row_num, [column_num])
INDIRECT~INDIRECT(ref_text, [a1])
INFO~INFO(type_text)
INT~INT(number)
INTERCEPT~INTERCEPT(known_ys, known_xs)
INTRATE~INTRATE(settlement, maturity, investment, redemption, [basis])
IPMT~IPMT(rate, per, nper, pv, [fv], [type])
IRR~IRR(values, [guess])
ISBLANK~ISBLANK(value)
ISERR~ISERR(value)
ISERROR~ISERROR(value)
ISEVEN~ISEVEN(number)
ISFORMULA~ISFORMULA(reference)
ISLOGICAL~ISLOGICAL(value)
ISNA~ISNA(value)
ISNONTEXT~ISNONTEXT(value)
ISNUMBER~ISNUMBER(value)
ISO.CEILING~ISO.CEILING(number, [significance])
ISODD~ISODD(number)
ISOMITTED~ISOMITTED(argument)
ISOWEEKNUM~ISOWEEKNUM(date)
ISPMT~ISPMT(rate, per, nper, pv)
ISREF~ISREF(value)
ISTEXT~ISTEXT(value)
JIS~JIS(text)
KURT~KURT(number1, [number2], ...)
LAMBDA~LAMBDA(parameter_or_calculation, ...)
LARGE~LARGE(array, k)
LCM~LCM(number1, [number2], ...)
LEFT~LEFT(text, [num_chars])
LEFTB~LEFTB(text, [num_bytes])
LEN~LEN(text)
LENB~LENB(text)
LET~LET(name1, name_value1, calculation_or_name2, [name_value2], ...)
LINEST~LINEST(known_ys, [known_xs], [const], [stats])
LN~LN(number)
LOG~LOG(number, [base])
LOG10~LOG10(number)
LOGEST~LOGEST(known_ys, [known_xs], [const], [stats])
LOGINV~LOGINV(probability, mean, standard_dev)
LOGNORM.DIST~LOGNORM.DIST(x, mean, standard_dev, cumulative)
LOGNORM.INV~LOGNORM.INV(probability, mean, standard_dev)
LOGNORMDIST~LOGNORMDIST(x, mean, standard_dev)
LOOKUP~LOOKUP(lookup_value, lookup_vector, [result_vector])
LOWER~LOWER(text)
MAKEARRAY~MAKEARRAY(rows, columns, function)
MAP~MAP(array, lambda_or_array2, ...)
MATCH~MATCH(lookup_value, lookup_array, [match_type])
MAX~MAX(number1, [number2], ...)
MAXA~MAXA(value1, [value2], ...)
MAXIFS~MAXIFS(max_range, criteria_range1, criteria1, ...)
MDETERM~MDETERM(array)
MDURATION~MDURATION(settlement, maturity, coupon, yld, frequency, [basis])
MEDIAN~MEDIAN(number1, [number2], ...)
MID~MID(text, start_num, num_chars)
MIDB~MIDB(text, start_num, num_bytes)
MIN~MIN(number1, [number2], ...)
MINA~MINA(value1, [value2], ...)
MINIFS~MINIFS(min_range, criteria_range1, criteria1, ...)
MINUTE~MINUTE(serial_number)
MINVERSE~MINVERSE(array)
MIRR~MIRR(values, finance_rate, reinvest_rate)
MMULT~MMULT(array1, array2)
MOD~MOD(number, divisor)
MODE~MODE(number1, [number2], ...)
MODE.MULT~MODE.MULT(number1, [number2], ...)
MODE.SNGL~MODE.SNGL(number1, [number2], ...)
MONTH~MONTH(serial_number)
MROUND~MROUND(number, multiple)
MULTINOMIAL~MULTINOMIAL(number1, [number2], ...)
MUNIT~MUNIT(dimension)
N~N(value)
NEGBINOM.DIST~NEGBINOM.DIST(number_f, number_s, probability_s, cumulative)
NEGBINOMDIST~NEGBINOMDIST(number_f, number_s, probability_s)
NETWORKDAYS~NETWORKDAYS(start_date, end_date, [holidays])
NETWORKDAYS.INTL~NETWORKDAYS.INTL(start_date, end_date, [weekend], [holidays])
NOMINAL~NOMINAL(effect_rate, npery)
NORM.DIST~NORM.DIST(x, mean, standard_dev, cumulative)
NORM.INV~NORM.INV(probability, mean, standard_dev)
NORM.S.DIST~NORM.S.DIST(z, cumulative)
NORM.S.INV~NORM.S.INV(probability)
NORMDIST~NORMDIST(x, mean, standard_dev, cumulative)
NORMINV~NORMINV(probability, mean, standard_dev)
NORMSDIST~NORMSDIST(z)
NORMSINV~NORMSINV(probability)
NOT~NOT(logical)
NPER~NPER(rate, pmt, pv, [fv], [type])
NPV~NPV(rate, value1, [value2], ...)
NUMBERVALUE~NUMBERVALUE(text, [decimal_separator], [group_separator])
OCT2BIN~OCT2BIN(number, [places])
OCT2DEC~OCT2DEC(number)
OCT2HEX~OCT2HEX(number, [places])
ODD~ODD(number)
ODDFPRICE~ODDFPRICE(settlement, maturity, issue, first_coupon, rate, yld, redemption, frequency, [basis])
ODDFYIELD~ODDFYIELD(settlement, maturity, issue, first_coupon, rate, pr, redemption, frequency, [basis])
ODDLPRICE~ODDLPRICE(settlement, maturity, last_interest, rate, yld, redemption, frequency, [basis])
ODDLYIELD~ODDLYIELD(settlement, maturity, last_interest, rate, pr, redemption, frequency, [basis])
OFFSET~OFFSET(reference, rows, cols, [height], [width])
OR~OR(logical1, [logical2], ...)
PDURATION~PDURATION(rate, py, fv)
PEARSON~PEARSON(array1, array2)
PERCENTILE~PERCENTILE(array, k)
PERCENTILE.EXC~PERCENTILE.EXC(array, k)
PERCENTILE.INC~PERCENTILE.INC(array, k)
PERCENTRANK~PERCENTRANK(array, x, [significance])
PERCENTRANK.EXC~PERCENTRANK.EXC(array, x, [significance])
PERCENTRANK.INC~PERCENTRANK.INC(array, x, [significance])
PERMUT~PERMUT(number, number_chosen)
PERMUTATIONA~PERMUTATIONA(number, number_chosen)
PHI~PHI(x)
PHONETIC~PHONETIC(reference)
PMT~PMT(rate, nper, pv, [fv], [type])
POISSON~POISSON(x, mean, cumulative)
POISSON.DIST~POISSON.DIST(x, mean, cumulative)
POWER~POWER(number, power)
PPMT~PPMT(rate, per, nper, pv, [fv], [type])
PRICE~PRICE(settlement, maturity, rate, yld, redemption, frequency, [basis])
PRICEDISC~PRICEDISC(settlement, maturity, discount, redemption, [basis])
PRICEMAT~PRICEMAT(settlement, maturity, issue, rate, yld, [basis])
PROB~PROB(x_range, prob_range, lower_limit, [upper_limit])
PRODUCT~PRODUCT(number1, [number2], ...)
PROPER~PROPER(text)
PV~PV(rate, nper, pmt, [fv], [typel])
QUARTILE~QUARTILE(array, quart)
QUARTILE.EXC~QUARTILE.EXC(array, quart)
QUARTILE.INC~QUARTILE.INC(array, quart)
QUOTIENT~QUOTIENT(numerator, denominator)
RADIANS~RADIANS(angle)
RANDARRAY~RANDARRAY([rows], [columns], [min], [max], [integer])
RANDBETWEEN~RANDBETWEEN(bottom, top)
RANK~RANK(number, ref, [order])
RANK.AVG~RANK.AVG(number, ref, [order])
RANK.EQ~RANK.EQ(number, ref, [order])
RATE~RATE(nper, pmt, pv, [fv], [type], [guess])
RECEIVED~RECEIVED(settlement, maturity, investment, discount, [basis])
REDUCE~REDUCE(initial_value, array, function)
REGISTER~REGISTER(module_text, procedure, type_text, [argument1], ...)
REGISTER.ID~REGISTER.ID(module_text, procedure, [type_text])
REPLACE~REPLACE(old_text, start_num, num_chars, new_text)
REPLACEB~REPLACEB(old_text, start_num, num_bytes, new_text)
REPT~REPT(text, number_times)
RIGHT~RIGHT(text, [num_chars])
RIGHTB~RIGHTB(text, [num_bytes])
ROMAN~ROMAN(number, [form])
ROUND~ROUND(number, num_digits)
ROUNDDOWN~ROUNDDOWN(number, num_digits)
ROUNDUP~ROUNDUP(number, num_digits)
ROW~ROW([reference])
ROWS~ROWS(array)
RRI~RRI(nper, pv, fv)
RSQ~RSQ(known_ys, known_xs)
RTD~RTD(progID, server, topic1, [topic2], ...)
SCAN~SCAN(initial_value, array, function)
SEARCH~SEARCH(find_text, within_text, [start_num])
SEARCHB~SEARCHB(find_text, within_text, [start_num])
SEC~SEC(number)
SECH~SECH(number)
SECOND~SECOND(serial_number)
SEQUENCE~SEQUENCE(rows, [columns], [start], [step])
SERIESSUM~SERIESSUM(x, n, m, coefficients)
SHEET~SHEET([value])
SHEETS~SHEETS([reference])
SIGN~SIGN(number)
SIN~SIN(number)
SINH~SINH(number)
SKEW~SKEW(number1, [number2], ...)
SKEW.P~SKEW.P(number1, [number2], ...)
SLN~SLN(cost, salvage, life)
SLOPE~SLOPE(known_ys, known_xs)
SMALL~SMALL(array, k)
SORT~SORT(array, [sort_index], [sort_order], [by_col])
SORTBY~SORTBY(array, by_array1, [sort_order1], ...)
SQRT~SQRT(number)
SQRTPI~SQRTPI(number)
STANDARDIZE~STANDARDIZE(x, mean, standard_dev)
STDEV~STDEV(number1, [number2], ...)
STDEV.P~STDEV.P(number1, [number2], ...)
STDEV.S~STDEV.S(number1, [number2], ...)
STDEVA~STDEVA(value1, [value2], ...)
STDEVP~STDEVP(number1, [number2], ...)
STDEVPA~STDEVPA(value1, [value2], ...)
STEYX~STEYX(known_ys, known_xs)
STOCKHISTORY~STOCKHISTORY(stock, start_date, [end_date], [interval], [headers], [properties], ...)
SUBSTITUTE~SUBSTITUTE(text, old_text, new_text, [instance_num])
SUBTOTAL~SUBTOTAL(function_num, ref1, ...)
SUM~SUM(number1, [number2], ...)
SUMIF~SUMIF(range, criteria, [sum_range])
SUMIFS~SUMIFS(sum_range, criteria_range1, criteria1, ...)
SUMPRODUCT~SUMPRODUCT(array1, [array2], [array3], ...)
SUMSQ~SUMSQ(number1, [number2], ...)
SUMX2MY2~SUMX2MY2(array_x, array_y)
SUMX2PY2~SUMX2PY2(array_x, array_y)
SUMXMY2~SUMXMY2(array_x, array_y)
SWITCH~SWITCH(expression, value1, result1, [default_or_value2], [result2], ...)
SYD~SYD(cost, salvage, life, per)
T~T(value)
T.DIST~T.DIST(x, deg_freedom, cumulative)
T.DIST.2T~T.DIST.2T(x, deg_freedom)
T.DIST.RT~T.DIST.RT(x, deg_freedom)
T.INV~T.INV(probability, deg_freedom)
T.INV.2T~T.INV.2T(probability, deg_freedom)
T.TEST~T.TEST(array1, array2, tails, type)
TAKE~TAKE(array, rows, [columns])
TAN~TAN(number)
TANH~TANH(number)
TBILLEQ~TBILLEQ(settlement, maturity, discount)
TBILLPRICE~TBILLPRICE(settlement, maturity, discount)
TBILLYIELD~TBILLYIELD(settlement, maturity, pr)
TDIST~TDIST(x, deg_freedom, tails)
TEXT~TEXT(value, format_text)
TEXTAFTER~TEXTAFTER(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])
TEXTBEFORE~TEXTBEFORE(text, delimiter, [instance_num], [match_mode], [match_end], [if_not_found])
TEXTJOIN~TEXTJOIN(delimiter, ignore_empty, text1, ...)
TEXTSPLIT~TEXTSPLIT(text, col_delimiter, [row_delimiter], [ignore_empty], [match_mode], [pad_with])
TIME~TIME(hour, minute, second)
TIMEVALUE~TIMEVALUE(time_text)
TINV~TINV(probability, deg_freedom)
TOCOL~TOCOL(array, [ignore], [scan_by_column])
TOROW~TOROW(array, [ignore], [scan_by_column])
TRANSPOSE~TRANSPOSE(array)
TREND~TREND(known_ys, [known_xs], [new_xs], [const])
TRIM~TRIM(text)
TRIMMEAN~TRIMMEAN(array, percent)
TRUNC~TRUNC(number, [num_digits])
TTEST~TTEST(array1, array2, tails, type)
TYPE~TYPE(value)
UNICHAR~UNICHAR(number)
UNICODE~UNICODE(text)
UNIQUE~UNIQUE(array, [by_col], [exactly_once])
UNREGISTER~UNREGISTER(register_id)
UPPER~UPPER(text)
VALUE~VALUE(text)
VALUETOTEXT~VALUETOTEXT(value, [format])
VAR~VAR(number1, [number2], ...)
VAR.P~VAR.P(number1, [number2], ...)
VAR.S~VAR.S(number1, [number2], ...)
VARA~VARA(value1, [value2], ...)
VARP~VARP(number1, [number2], ...)
VARPA~VARPA(value1, [value2], ...)
VDB~VDB(cost, salvage, life, start_period, end_period, [factor], [no_switch])
VLOOKUP~VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])
VSTACK~VSTACK(array1, [array2], ...)
WEBSERVICE~WEBSERVICE(url)
WEEKDAY~WEEKDAY(serial_number, [return_type])
WEEKNUM~WEEKNUM(serial_number, [return_type])
WEIBULL~WEIBULL(x, alpha, beta, cumulative)
WEIBULL.DIST~WEIBULL.DIST(x, alpha, beta, cumulative)
WORKDAY~WORKDAY(start_date, days, [holidays])
WORKDAY.INTL~WORKDAY.INTL(start_date, days, [weekend], [holidays])
WRAPCOLS~WRAPCOLS(vector, wrap_count, [pad_with])
WRAPROWS~WRAPROWS(vector, wrap_count, [pad_with])
XIRR~XIRR(values, dates, [guess])
XLOOKUP~XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])
XMATCH~XMATCH(lookup_value, lookup_array, [match_mode], [search_mode])
XNPV~XNPV(rate, values, dates)
XOR~XOR(logical1, [logical2], ...)
YEAR~YEAR(serial_number)
YEARFRAC~YEARFRAC(start_date, end_date, [basis])
YIELD~YIELD(settlement, maturity, rate, pr, redemption, frequency, [basis])
YIELDDISC~YIELDDISC(settlement, maturity, pr, redemption, [basis])
YIELDMAT~YIELDMAT(settlement, maturity, issue, rate, pr, [basis])
Z.TEST~Z.TEST(array, x, [sigma])
ZTEST~ZTEST(array, x, [sigma])
